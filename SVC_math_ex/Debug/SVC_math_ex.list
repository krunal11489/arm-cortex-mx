
SVC_math_ex.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013f8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000010c  080015a8  080015a8  000115a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016b4  080016b4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016b4  080016b4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016b4  080016b4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016b4  080016b4  000116b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016b8  080016b8  000116b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08001720  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08001720  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002515  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000690  00000000  00000000  000225a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00022c38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00022d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be4  00000000  00000000  00022e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013ba  00000000  00000000  00025a64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000096e0  00000000  00000000  00026e1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000304fe  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c2c  00000000  00000000  00030554  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001590 	.word	0x08001590

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001590 	.word	0x08001590

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <add_numbers>:
#include<stdio.h>

void SVC_Handler_c(uint32_t *pBaseStackFrame);

int32_t add_numbers(int32_t x , int32_t y )
{
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
    int32_t res;
    __asm volatile("SVC #36");
 800029a:	df24      	svc	36	; 0x24
    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 800029c:	4603      	mov	r3, r0
 800029e:	60fb      	str	r3, [r7, #12]
    return res;
 80002a0:	68fb      	ldr	r3, [r7, #12]

}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3714      	adds	r7, #20
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bc80      	pop	{r7}
 80002aa:	4770      	bx	lr

080002ac <sub_numbers>:


int32_t sub_numbers(int32_t x , int32_t y )
{
 80002ac:	b480      	push	{r7}
 80002ae:	b085      	sub	sp, #20
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	6039      	str	r1, [r7, #0]
	int32_t res;
	    __asm volatile("SVC #37");
 80002b6:	df25      	svc	37	; 0x25
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002b8:	4603      	mov	r3, r0
 80002ba:	60fb      	str	r3, [r7, #12]
	    return res;
 80002bc:	68fb      	ldr	r3, [r7, #12]

}
 80002be:	4618      	mov	r0, r3
 80002c0:	3714      	adds	r7, #20
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bc80      	pop	{r7}
 80002c6:	4770      	bx	lr

080002c8 <mul_numbers>:

int32_t mul_numbers(int32_t x , int32_t y )
{
 80002c8:	b480      	push	{r7}
 80002ca:	b085      	sub	sp, #20
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
 80002d0:	6039      	str	r1, [r7, #0]

	int32_t res;
	    __asm volatile("SVC #38");
 80002d2:	df26      	svc	38	; 0x26
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002d4:	4603      	mov	r3, r0
 80002d6:	60fb      	str	r3, [r7, #12]
	    return res;
 80002d8:	68fb      	ldr	r3, [r7, #12]
}
 80002da:	4618      	mov	r0, r3
 80002dc:	3714      	adds	r7, #20
 80002de:	46bd      	mov	sp, r7
 80002e0:	bc80      	pop	{r7}
 80002e2:	4770      	bx	lr

080002e4 <div_numbers>:

int32_t div_numbers(int32_t x , int32_t y )
{
 80002e4:	b480      	push	{r7}
 80002e6:	b085      	sub	sp, #20
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
 80002ec:	6039      	str	r1, [r7, #0]
	int32_t res;
	    __asm volatile("SVC #39");
 80002ee:	df27      	svc	39	; 0x27
	    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002f0:	4603      	mov	r3, r0
 80002f2:	60fb      	str	r3, [r7, #12]
	    return res;
 80002f4:	68fb      	ldr	r3, [r7, #12]

}
 80002f6:	4618      	mov	r0, r3
 80002f8:	3714      	adds	r7, #20
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr

08000300 <main>:


int main(void)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b082      	sub	sp, #8
 8000304:	af00      	add	r7, sp, #0
    int32_t res;

    res = add_numbers(40, -90);
 8000306:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800030a:	2028      	movs	r0, #40	; 0x28
 800030c:	f7ff ffc0 	bl	8000290 <add_numbers>
 8000310:	6078      	str	r0, [r7, #4]
    printf("Add result = %ld\n",res);
 8000312:	6879      	ldr	r1, [r7, #4]
 8000314:	4810      	ldr	r0, [pc, #64]	; (8000358 <main+0x58>)
 8000316:	f000 f973 	bl	8000600 <iprintf>

    res = sub_numbers(25,150);
 800031a:	2196      	movs	r1, #150	; 0x96
 800031c:	2019      	movs	r0, #25
 800031e:	f7ff ffc5 	bl	80002ac <sub_numbers>
 8000322:	6078      	str	r0, [r7, #4]
    printf("Sub result = %ld\n",res);
 8000324:	6879      	ldr	r1, [r7, #4]
 8000326:	480d      	ldr	r0, [pc, #52]	; (800035c <main+0x5c>)
 8000328:	f000 f96a 	bl	8000600 <iprintf>

    res = mul_numbers(374,890);
 800032c:	f240 317a 	movw	r1, #890	; 0x37a
 8000330:	f44f 70bb 	mov.w	r0, #374	; 0x176
 8000334:	f7ff ffc8 	bl	80002c8 <mul_numbers>
 8000338:	6078      	str	r0, [r7, #4]
    printf("mul result = %ld\n", res);
 800033a:	6879      	ldr	r1, [r7, #4]
 800033c:	4808      	ldr	r0, [pc, #32]	; (8000360 <main+0x60>)
 800033e:	f000 f95f 	bl	8000600 <iprintf>

    res = div_numbers(67,-3);
 8000342:	f06f 0102 	mvn.w	r1, #2
 8000346:	2043      	movs	r0, #67	; 0x43
 8000348:	f7ff ffcc 	bl	80002e4 <div_numbers>
 800034c:	6078      	str	r0, [r7, #4]
    printf("div result = %ld\n",res);
 800034e:	6879      	ldr	r1, [r7, #4]
 8000350:	4804      	ldr	r0, [pc, #16]	; (8000364 <main+0x64>)
 8000352:	f000 f955 	bl	8000600 <iprintf>

    for(;;);
 8000356:	e7fe      	b.n	8000356 <main+0x56>
 8000358:	080015a8 	.word	0x080015a8
 800035c:	080015bc 	.word	0x080015bc
 8000360:	080015d0 	.word	0x080015d0
 8000364:	080015e4 	.word	0x080015e4

08000368 <SVC_Handler>:
}


__attribute__( ( naked ) ) void SVC_Handler( void )
{
    __asm ("MRS r0,MSP");
 8000368:	f3ef 8008 	mrs	r0, MSP
    __asm( "B SVC_Handler_c");
 800036c:	f000 b802 	b.w	8000374 <SVC_Handler_c>
}
 8000370:	bf00      	nop
	...

08000374 <SVC_Handler_c>:


void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	b088      	sub	sp, #32
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
    printf("in SVC handler\n");
 800037c:	4820      	ldr	r0, [pc, #128]	; (8000400 <SVC_Handler_c+0x8c>)
 800037e:	f000 f9c5 	bl	800070c <puts>

    uint32_t arg1,arg2,ans;

    arg1=pBaseOfStackFrame[0];
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	61bb      	str	r3, [r7, #24]
    arg2=pBaseOfStackFrame[1];
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	685b      	ldr	r3, [r3, #4]
 800038c:	617b      	str	r3, [r7, #20]

    uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	3318      	adds	r3, #24
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	613b      	str	r3, [r7, #16]

    //2. decrement the return address by 2 to point to
    //opcode of the SVC instruction in the program memory
    pReturn_addr-=2;
 8000396:	693b      	ldr	r3, [r7, #16]
 8000398:	3b02      	subs	r3, #2
 800039a:	613b      	str	r3, [r7, #16]


    //3. extract the SVC number (LSByte of the opcode)
    uint8_t svc_number = *pReturn_addr;
 800039c:	693b      	ldr	r3, [r7, #16]
 800039e:	781b      	ldrb	r3, [r3, #0]
 80003a0:	73fb      	strb	r3, [r7, #15]

    //printf("Svc number is : %d\n",svc_number);


/*SVC number signifies the type of operation , decode it */
    switch(svc_number)
 80003a2:	7bfb      	ldrb	r3, [r7, #15]
 80003a4:	3b24      	subs	r3, #36	; 0x24
 80003a6:	2b03      	cmp	r3, #3
 80003a8:	d820      	bhi.n	80003ec <SVC_Handler_c+0x78>
 80003aa:	a201      	add	r2, pc, #4	; (adr r2, 80003b0 <SVC_Handler_c+0x3c>)
 80003ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003b0:	080003c1 	.word	0x080003c1
 80003b4:	080003cb 	.word	0x080003cb
 80003b8:	080003d5 	.word	0x080003d5
 80003bc:	080003e1 	.word	0x080003e1
    {
    case 36:
    	ans=arg1+arg2;
 80003c0:	69ba      	ldr	r2, [r7, #24]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	4413      	add	r3, r2
 80003c6:	61fb      	str	r3, [r7, #28]
        break;
 80003c8:	e013      	b.n	80003f2 <SVC_Handler_c+0x7e>
    case 37:
    	ans=arg1-arg2;
 80003ca:	69ba      	ldr	r2, [r7, #24]
 80003cc:	697b      	ldr	r3, [r7, #20]
 80003ce:	1ad3      	subs	r3, r2, r3
 80003d0:	61fb      	str	r3, [r7, #28]
        break;
 80003d2:	e00e      	b.n	80003f2 <SVC_Handler_c+0x7e>
    case 38:
    	ans=arg1*arg2;
 80003d4:	69bb      	ldr	r3, [r7, #24]
 80003d6:	697a      	ldr	r2, [r7, #20]
 80003d8:	fb02 f303 	mul.w	r3, r2, r3
 80003dc:	61fb      	str	r3, [r7, #28]
        break;
 80003de:	e008      	b.n	80003f2 <SVC_Handler_c+0x7e>
    case 39:
    	ans=arg1/arg2;
 80003e0:	69ba      	ldr	r2, [r7, #24]
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80003e8:	61fb      	str	r3, [r7, #28]
        break;
 80003ea:	e002      	b.n	80003f2 <SVC_Handler_c+0x7e>
    default:
        printf("invalid svc code\n");
 80003ec:	4805      	ldr	r0, [pc, #20]	; (8000404 <SVC_Handler_c+0x90>)
 80003ee:	f000 f98d 	bl	800070c <puts>

    }

/*store the result back to stack frame at R0's position */
    pBaseOfStackFrame[0] = ans; //TODO
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	69fa      	ldr	r2, [r7, #28]
 80003f6:	601a      	str	r2, [r3, #0]

}
 80003f8:	bf00      	nop
 80003fa:	3720      	adds	r7, #32
 80003fc:	46bd      	mov	sp, r7
 80003fe:	bd80      	pop	{r7, pc}
 8000400:	080015f8 	.word	0x080015f8
 8000404:	08001608 	.word	0x08001608

08000408 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b086      	sub	sp, #24
 800040c:	af00      	add	r7, sp, #0
 800040e:	60f8      	str	r0, [r7, #12]
 8000410:	60b9      	str	r1, [r7, #8]
 8000412:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000414:	2300      	movs	r3, #0
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	e00a      	b.n	8000430 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800041a:	f3af 8000 	nop.w
 800041e:	4601      	mov	r1, r0
 8000420:	68bb      	ldr	r3, [r7, #8]
 8000422:	1c5a      	adds	r2, r3, #1
 8000424:	60ba      	str	r2, [r7, #8]
 8000426:	b2ca      	uxtb	r2, r1
 8000428:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042a:	697b      	ldr	r3, [r7, #20]
 800042c:	3301      	adds	r3, #1
 800042e:	617b      	str	r3, [r7, #20]
 8000430:	697a      	ldr	r2, [r7, #20]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	429a      	cmp	r2, r3
 8000436:	dbf0      	blt.n	800041a <_read+0x12>
	}

return len;
 8000438:	687b      	ldr	r3, [r7, #4]
}
 800043a:	4618      	mov	r0, r3
 800043c:	3718      	adds	r7, #24
 800043e:	46bd      	mov	sp, r7
 8000440:	bd80      	pop	{r7, pc}

08000442 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000442:	b580      	push	{r7, lr}
 8000444:	b086      	sub	sp, #24
 8000446:	af00      	add	r7, sp, #0
 8000448:	60f8      	str	r0, [r7, #12]
 800044a:	60b9      	str	r1, [r7, #8]
 800044c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044e:	2300      	movs	r3, #0
 8000450:	617b      	str	r3, [r7, #20]
 8000452:	e009      	b.n	8000468 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000454:	68bb      	ldr	r3, [r7, #8]
 8000456:	1c5a      	adds	r2, r3, #1
 8000458:	60ba      	str	r2, [r7, #8]
 800045a:	781b      	ldrb	r3, [r3, #0]
 800045c:	4618      	mov	r0, r3
 800045e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000462:	697b      	ldr	r3, [r7, #20]
 8000464:	3301      	adds	r3, #1
 8000466:	617b      	str	r3, [r7, #20]
 8000468:	697a      	ldr	r2, [r7, #20]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	429a      	cmp	r2, r3
 800046e:	dbf1      	blt.n	8000454 <_write+0x12>
	}
	return len;
 8000470:	687b      	ldr	r3, [r7, #4]
}
 8000472:	4618      	mov	r0, r3
 8000474:	3718      	adds	r7, #24
 8000476:	46bd      	mov	sp, r7
 8000478:	bd80      	pop	{r7, pc}

0800047a <_close>:

int _close(int file)
{
 800047a:	b480      	push	{r7}
 800047c:	b083      	sub	sp, #12
 800047e:	af00      	add	r7, sp, #0
 8000480:	6078      	str	r0, [r7, #4]
	return -1;
 8000482:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000486:	4618      	mov	r0, r3
 8000488:	370c      	adds	r7, #12
 800048a:	46bd      	mov	sp, r7
 800048c:	bc80      	pop	{r7}
 800048e:	4770      	bx	lr

08000490 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000490:	b480      	push	{r7}
 8000492:	b083      	sub	sp, #12
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
 8000498:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800049a:	683b      	ldr	r3, [r7, #0]
 800049c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004a0:	605a      	str	r2, [r3, #4]
	return 0;
 80004a2:	2300      	movs	r3, #0
}
 80004a4:	4618      	mov	r0, r3
 80004a6:	370c      	adds	r7, #12
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bc80      	pop	{r7}
 80004ac:	4770      	bx	lr

080004ae <_isatty>:

int _isatty(int file)
{
 80004ae:	b480      	push	{r7}
 80004b0:	b083      	sub	sp, #12
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
	return 1;
 80004b6:	2301      	movs	r3, #1
}
 80004b8:	4618      	mov	r0, r3
 80004ba:	370c      	adds	r7, #12
 80004bc:	46bd      	mov	sp, r7
 80004be:	bc80      	pop	{r7}
 80004c0:	4770      	bx	lr

080004c2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004c2:	b480      	push	{r7}
 80004c4:	b085      	sub	sp, #20
 80004c6:	af00      	add	r7, sp, #0
 80004c8:	60f8      	str	r0, [r7, #12]
 80004ca:	60b9      	str	r1, [r7, #8]
 80004cc:	607a      	str	r2, [r7, #4]
	return 0;
 80004ce:	2300      	movs	r3, #0
}
 80004d0:	4618      	mov	r0, r3
 80004d2:	3714      	adds	r7, #20
 80004d4:	46bd      	mov	sp, r7
 80004d6:	bc80      	pop	{r7}
 80004d8:	4770      	bx	lr
	...

080004dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004dc:	b580      	push	{r7, lr}
 80004de:	b086      	sub	sp, #24
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004e4:	4a14      	ldr	r2, [pc, #80]	; (8000538 <_sbrk+0x5c>)
 80004e6:	4b15      	ldr	r3, [pc, #84]	; (800053c <_sbrk+0x60>)
 80004e8:	1ad3      	subs	r3, r2, r3
 80004ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004ec:	697b      	ldr	r3, [r7, #20]
 80004ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004f0:	4b13      	ldr	r3, [pc, #76]	; (8000540 <_sbrk+0x64>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d102      	bne.n	80004fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004f8:	4b11      	ldr	r3, [pc, #68]	; (8000540 <_sbrk+0x64>)
 80004fa:	4a12      	ldr	r2, [pc, #72]	; (8000544 <_sbrk+0x68>)
 80004fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004fe:	4b10      	ldr	r3, [pc, #64]	; (8000540 <_sbrk+0x64>)
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4413      	add	r3, r2
 8000506:	693a      	ldr	r2, [r7, #16]
 8000508:	429a      	cmp	r2, r3
 800050a:	d207      	bcs.n	800051c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800050c:	f000 f846 	bl	800059c <__errno>
 8000510:	4603      	mov	r3, r0
 8000512:	220c      	movs	r2, #12
 8000514:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000516:	f04f 33ff 	mov.w	r3, #4294967295
 800051a:	e009      	b.n	8000530 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800051c:	4b08      	ldr	r3, [pc, #32]	; (8000540 <_sbrk+0x64>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000522:	4b07      	ldr	r3, [pc, #28]	; (8000540 <_sbrk+0x64>)
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	4413      	add	r3, r2
 800052a:	4a05      	ldr	r2, [pc, #20]	; (8000540 <_sbrk+0x64>)
 800052c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800052e:	68fb      	ldr	r3, [r7, #12]
}
 8000530:	4618      	mov	r0, r3
 8000532:	3718      	adds	r7, #24
 8000534:	46bd      	mov	sp, r7
 8000536:	bd80      	pop	{r7, pc}
 8000538:	20020000 	.word	0x20020000
 800053c:	00000400 	.word	0x00000400
 8000540:	20000080 	.word	0x20000080
 8000544:	200000a0 	.word	0x200000a0

08000548 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000548:	480d      	ldr	r0, [pc, #52]	; (8000580 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800054a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800054c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000550:	480c      	ldr	r0, [pc, #48]	; (8000584 <LoopForever+0x6>)
  ldr r1, =_edata
 8000552:	490d      	ldr	r1, [pc, #52]	; (8000588 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000554:	4a0d      	ldr	r2, [pc, #52]	; (800058c <LoopForever+0xe>)
  movs r3, #0
 8000556:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000558:	e002      	b.n	8000560 <LoopCopyDataInit>

0800055a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800055a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800055c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055e:	3304      	adds	r3, #4

08000560 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000560:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000562:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000564:	d3f9      	bcc.n	800055a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000566:	4a0a      	ldr	r2, [pc, #40]	; (8000590 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000568:	4c0a      	ldr	r4, [pc, #40]	; (8000594 <LoopForever+0x16>)
  movs r3, #0
 800056a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800056c:	e001      	b.n	8000572 <LoopFillZerobss>

0800056e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000570:	3204      	adds	r2, #4

08000572 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000572:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000574:	d3fb      	bcc.n	800056e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000576:	f000 f817 	bl	80005a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800057a:	f7ff fec1 	bl	8000300 <main>

0800057e <LoopForever>:

LoopForever:
    b LoopForever
 800057e:	e7fe      	b.n	800057e <LoopForever>
  ldr   r0, =_estack
 8000580:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000584:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000588:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800058c:	080016bc 	.word	0x080016bc
  ldr r2, =_sbss
 8000590:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000594:	2000009c 	.word	0x2000009c

08000598 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000598:	e7fe      	b.n	8000598 <ADC_IRQHandler>
	...

0800059c <__errno>:
 800059c:	4b01      	ldr	r3, [pc, #4]	; (80005a4 <__errno+0x8>)
 800059e:	6818      	ldr	r0, [r3, #0]
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop
 80005a4:	20000000 	.word	0x20000000

080005a8 <__libc_init_array>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	4d0d      	ldr	r5, [pc, #52]	; (80005e0 <__libc_init_array+0x38>)
 80005ac:	4c0d      	ldr	r4, [pc, #52]	; (80005e4 <__libc_init_array+0x3c>)
 80005ae:	1b64      	subs	r4, r4, r5
 80005b0:	10a4      	asrs	r4, r4, #2
 80005b2:	2600      	movs	r6, #0
 80005b4:	42a6      	cmp	r6, r4
 80005b6:	d109      	bne.n	80005cc <__libc_init_array+0x24>
 80005b8:	4d0b      	ldr	r5, [pc, #44]	; (80005e8 <__libc_init_array+0x40>)
 80005ba:	4c0c      	ldr	r4, [pc, #48]	; (80005ec <__libc_init_array+0x44>)
 80005bc:	f000 ffe8 	bl	8001590 <_init>
 80005c0:	1b64      	subs	r4, r4, r5
 80005c2:	10a4      	asrs	r4, r4, #2
 80005c4:	2600      	movs	r6, #0
 80005c6:	42a6      	cmp	r6, r4
 80005c8:	d105      	bne.n	80005d6 <__libc_init_array+0x2e>
 80005ca:	bd70      	pop	{r4, r5, r6, pc}
 80005cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d0:	4798      	blx	r3
 80005d2:	3601      	adds	r6, #1
 80005d4:	e7ee      	b.n	80005b4 <__libc_init_array+0xc>
 80005d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80005da:	4798      	blx	r3
 80005dc:	3601      	adds	r6, #1
 80005de:	e7f2      	b.n	80005c6 <__libc_init_array+0x1e>
 80005e0:	080016b4 	.word	0x080016b4
 80005e4:	080016b4 	.word	0x080016b4
 80005e8:	080016b4 	.word	0x080016b4
 80005ec:	080016b8 	.word	0x080016b8

080005f0 <memset>:
 80005f0:	4402      	add	r2, r0
 80005f2:	4603      	mov	r3, r0
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d100      	bne.n	80005fa <memset+0xa>
 80005f8:	4770      	bx	lr
 80005fa:	f803 1b01 	strb.w	r1, [r3], #1
 80005fe:	e7f9      	b.n	80005f4 <memset+0x4>

08000600 <iprintf>:
 8000600:	b40f      	push	{r0, r1, r2, r3}
 8000602:	4b0a      	ldr	r3, [pc, #40]	; (800062c <iprintf+0x2c>)
 8000604:	b513      	push	{r0, r1, r4, lr}
 8000606:	681c      	ldr	r4, [r3, #0]
 8000608:	b124      	cbz	r4, 8000614 <iprintf+0x14>
 800060a:	69a3      	ldr	r3, [r4, #24]
 800060c:	b913      	cbnz	r3, 8000614 <iprintf+0x14>
 800060e:	4620      	mov	r0, r4
 8000610:	f000 fa5e 	bl	8000ad0 <__sinit>
 8000614:	ab05      	add	r3, sp, #20
 8000616:	9a04      	ldr	r2, [sp, #16]
 8000618:	68a1      	ldr	r1, [r4, #8]
 800061a:	9301      	str	r3, [sp, #4]
 800061c:	4620      	mov	r0, r4
 800061e:	f000 fc2b 	bl	8000e78 <_vfiprintf_r>
 8000622:	b002      	add	sp, #8
 8000624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000628:	b004      	add	sp, #16
 800062a:	4770      	bx	lr
 800062c:	20000000 	.word	0x20000000

08000630 <_puts_r>:
 8000630:	b570      	push	{r4, r5, r6, lr}
 8000632:	460e      	mov	r6, r1
 8000634:	4605      	mov	r5, r0
 8000636:	b118      	cbz	r0, 8000640 <_puts_r+0x10>
 8000638:	6983      	ldr	r3, [r0, #24]
 800063a:	b90b      	cbnz	r3, 8000640 <_puts_r+0x10>
 800063c:	f000 fa48 	bl	8000ad0 <__sinit>
 8000640:	69ab      	ldr	r3, [r5, #24]
 8000642:	68ac      	ldr	r4, [r5, #8]
 8000644:	b913      	cbnz	r3, 800064c <_puts_r+0x1c>
 8000646:	4628      	mov	r0, r5
 8000648:	f000 fa42 	bl	8000ad0 <__sinit>
 800064c:	4b2c      	ldr	r3, [pc, #176]	; (8000700 <_puts_r+0xd0>)
 800064e:	429c      	cmp	r4, r3
 8000650:	d120      	bne.n	8000694 <_puts_r+0x64>
 8000652:	686c      	ldr	r4, [r5, #4]
 8000654:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000656:	07db      	lsls	r3, r3, #31
 8000658:	d405      	bmi.n	8000666 <_puts_r+0x36>
 800065a:	89a3      	ldrh	r3, [r4, #12]
 800065c:	0598      	lsls	r0, r3, #22
 800065e:	d402      	bmi.n	8000666 <_puts_r+0x36>
 8000660:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000662:	f000 fad3 	bl	8000c0c <__retarget_lock_acquire_recursive>
 8000666:	89a3      	ldrh	r3, [r4, #12]
 8000668:	0719      	lsls	r1, r3, #28
 800066a:	d51d      	bpl.n	80006a8 <_puts_r+0x78>
 800066c:	6923      	ldr	r3, [r4, #16]
 800066e:	b1db      	cbz	r3, 80006a8 <_puts_r+0x78>
 8000670:	3e01      	subs	r6, #1
 8000672:	68a3      	ldr	r3, [r4, #8]
 8000674:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000678:	3b01      	subs	r3, #1
 800067a:	60a3      	str	r3, [r4, #8]
 800067c:	bb39      	cbnz	r1, 80006ce <_puts_r+0x9e>
 800067e:	2b00      	cmp	r3, #0
 8000680:	da38      	bge.n	80006f4 <_puts_r+0xc4>
 8000682:	4622      	mov	r2, r4
 8000684:	210a      	movs	r1, #10
 8000686:	4628      	mov	r0, r5
 8000688:	f000 f848 	bl	800071c <__swbuf_r>
 800068c:	3001      	adds	r0, #1
 800068e:	d011      	beq.n	80006b4 <_puts_r+0x84>
 8000690:	250a      	movs	r5, #10
 8000692:	e011      	b.n	80006b8 <_puts_r+0x88>
 8000694:	4b1b      	ldr	r3, [pc, #108]	; (8000704 <_puts_r+0xd4>)
 8000696:	429c      	cmp	r4, r3
 8000698:	d101      	bne.n	800069e <_puts_r+0x6e>
 800069a:	68ac      	ldr	r4, [r5, #8]
 800069c:	e7da      	b.n	8000654 <_puts_r+0x24>
 800069e:	4b1a      	ldr	r3, [pc, #104]	; (8000708 <_puts_r+0xd8>)
 80006a0:	429c      	cmp	r4, r3
 80006a2:	bf08      	it	eq
 80006a4:	68ec      	ldreq	r4, [r5, #12]
 80006a6:	e7d5      	b.n	8000654 <_puts_r+0x24>
 80006a8:	4621      	mov	r1, r4
 80006aa:	4628      	mov	r0, r5
 80006ac:	f000 f888 	bl	80007c0 <__swsetup_r>
 80006b0:	2800      	cmp	r0, #0
 80006b2:	d0dd      	beq.n	8000670 <_puts_r+0x40>
 80006b4:	f04f 35ff 	mov.w	r5, #4294967295
 80006b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006ba:	07da      	lsls	r2, r3, #31
 80006bc:	d405      	bmi.n	80006ca <_puts_r+0x9a>
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	059b      	lsls	r3, r3, #22
 80006c2:	d402      	bmi.n	80006ca <_puts_r+0x9a>
 80006c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006c6:	f000 faa2 	bl	8000c0e <__retarget_lock_release_recursive>
 80006ca:	4628      	mov	r0, r5
 80006cc:	bd70      	pop	{r4, r5, r6, pc}
 80006ce:	2b00      	cmp	r3, #0
 80006d0:	da04      	bge.n	80006dc <_puts_r+0xac>
 80006d2:	69a2      	ldr	r2, [r4, #24]
 80006d4:	429a      	cmp	r2, r3
 80006d6:	dc06      	bgt.n	80006e6 <_puts_r+0xb6>
 80006d8:	290a      	cmp	r1, #10
 80006da:	d004      	beq.n	80006e6 <_puts_r+0xb6>
 80006dc:	6823      	ldr	r3, [r4, #0]
 80006de:	1c5a      	adds	r2, r3, #1
 80006e0:	6022      	str	r2, [r4, #0]
 80006e2:	7019      	strb	r1, [r3, #0]
 80006e4:	e7c5      	b.n	8000672 <_puts_r+0x42>
 80006e6:	4622      	mov	r2, r4
 80006e8:	4628      	mov	r0, r5
 80006ea:	f000 f817 	bl	800071c <__swbuf_r>
 80006ee:	3001      	adds	r0, #1
 80006f0:	d1bf      	bne.n	8000672 <_puts_r+0x42>
 80006f2:	e7df      	b.n	80006b4 <_puts_r+0x84>
 80006f4:	6823      	ldr	r3, [r4, #0]
 80006f6:	250a      	movs	r5, #10
 80006f8:	1c5a      	adds	r2, r3, #1
 80006fa:	6022      	str	r2, [r4, #0]
 80006fc:	701d      	strb	r5, [r3, #0]
 80006fe:	e7db      	b.n	80006b8 <_puts_r+0x88>
 8000700:	08001640 	.word	0x08001640
 8000704:	08001660 	.word	0x08001660
 8000708:	08001620 	.word	0x08001620

0800070c <puts>:
 800070c:	4b02      	ldr	r3, [pc, #8]	; (8000718 <puts+0xc>)
 800070e:	4601      	mov	r1, r0
 8000710:	6818      	ldr	r0, [r3, #0]
 8000712:	f7ff bf8d 	b.w	8000630 <_puts_r>
 8000716:	bf00      	nop
 8000718:	20000000 	.word	0x20000000

0800071c <__swbuf_r>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	460e      	mov	r6, r1
 8000720:	4614      	mov	r4, r2
 8000722:	4605      	mov	r5, r0
 8000724:	b118      	cbz	r0, 800072e <__swbuf_r+0x12>
 8000726:	6983      	ldr	r3, [r0, #24]
 8000728:	b90b      	cbnz	r3, 800072e <__swbuf_r+0x12>
 800072a:	f000 f9d1 	bl	8000ad0 <__sinit>
 800072e:	4b21      	ldr	r3, [pc, #132]	; (80007b4 <__swbuf_r+0x98>)
 8000730:	429c      	cmp	r4, r3
 8000732:	d12b      	bne.n	800078c <__swbuf_r+0x70>
 8000734:	686c      	ldr	r4, [r5, #4]
 8000736:	69a3      	ldr	r3, [r4, #24]
 8000738:	60a3      	str	r3, [r4, #8]
 800073a:	89a3      	ldrh	r3, [r4, #12]
 800073c:	071a      	lsls	r2, r3, #28
 800073e:	d52f      	bpl.n	80007a0 <__swbuf_r+0x84>
 8000740:	6923      	ldr	r3, [r4, #16]
 8000742:	b36b      	cbz	r3, 80007a0 <__swbuf_r+0x84>
 8000744:	6923      	ldr	r3, [r4, #16]
 8000746:	6820      	ldr	r0, [r4, #0]
 8000748:	1ac0      	subs	r0, r0, r3
 800074a:	6963      	ldr	r3, [r4, #20]
 800074c:	b2f6      	uxtb	r6, r6
 800074e:	4283      	cmp	r3, r0
 8000750:	4637      	mov	r7, r6
 8000752:	dc04      	bgt.n	800075e <__swbuf_r+0x42>
 8000754:	4621      	mov	r1, r4
 8000756:	4628      	mov	r0, r5
 8000758:	f000 f926 	bl	80009a8 <_fflush_r>
 800075c:	bb30      	cbnz	r0, 80007ac <__swbuf_r+0x90>
 800075e:	68a3      	ldr	r3, [r4, #8]
 8000760:	3b01      	subs	r3, #1
 8000762:	60a3      	str	r3, [r4, #8]
 8000764:	6823      	ldr	r3, [r4, #0]
 8000766:	1c5a      	adds	r2, r3, #1
 8000768:	6022      	str	r2, [r4, #0]
 800076a:	701e      	strb	r6, [r3, #0]
 800076c:	6963      	ldr	r3, [r4, #20]
 800076e:	3001      	adds	r0, #1
 8000770:	4283      	cmp	r3, r0
 8000772:	d004      	beq.n	800077e <__swbuf_r+0x62>
 8000774:	89a3      	ldrh	r3, [r4, #12]
 8000776:	07db      	lsls	r3, r3, #31
 8000778:	d506      	bpl.n	8000788 <__swbuf_r+0x6c>
 800077a:	2e0a      	cmp	r6, #10
 800077c:	d104      	bne.n	8000788 <__swbuf_r+0x6c>
 800077e:	4621      	mov	r1, r4
 8000780:	4628      	mov	r0, r5
 8000782:	f000 f911 	bl	80009a8 <_fflush_r>
 8000786:	b988      	cbnz	r0, 80007ac <__swbuf_r+0x90>
 8000788:	4638      	mov	r0, r7
 800078a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800078c:	4b0a      	ldr	r3, [pc, #40]	; (80007b8 <__swbuf_r+0x9c>)
 800078e:	429c      	cmp	r4, r3
 8000790:	d101      	bne.n	8000796 <__swbuf_r+0x7a>
 8000792:	68ac      	ldr	r4, [r5, #8]
 8000794:	e7cf      	b.n	8000736 <__swbuf_r+0x1a>
 8000796:	4b09      	ldr	r3, [pc, #36]	; (80007bc <__swbuf_r+0xa0>)
 8000798:	429c      	cmp	r4, r3
 800079a:	bf08      	it	eq
 800079c:	68ec      	ldreq	r4, [r5, #12]
 800079e:	e7ca      	b.n	8000736 <__swbuf_r+0x1a>
 80007a0:	4621      	mov	r1, r4
 80007a2:	4628      	mov	r0, r5
 80007a4:	f000 f80c 	bl	80007c0 <__swsetup_r>
 80007a8:	2800      	cmp	r0, #0
 80007aa:	d0cb      	beq.n	8000744 <__swbuf_r+0x28>
 80007ac:	f04f 37ff 	mov.w	r7, #4294967295
 80007b0:	e7ea      	b.n	8000788 <__swbuf_r+0x6c>
 80007b2:	bf00      	nop
 80007b4:	08001640 	.word	0x08001640
 80007b8:	08001660 	.word	0x08001660
 80007bc:	08001620 	.word	0x08001620

080007c0 <__swsetup_r>:
 80007c0:	4b32      	ldr	r3, [pc, #200]	; (800088c <__swsetup_r+0xcc>)
 80007c2:	b570      	push	{r4, r5, r6, lr}
 80007c4:	681d      	ldr	r5, [r3, #0]
 80007c6:	4606      	mov	r6, r0
 80007c8:	460c      	mov	r4, r1
 80007ca:	b125      	cbz	r5, 80007d6 <__swsetup_r+0x16>
 80007cc:	69ab      	ldr	r3, [r5, #24]
 80007ce:	b913      	cbnz	r3, 80007d6 <__swsetup_r+0x16>
 80007d0:	4628      	mov	r0, r5
 80007d2:	f000 f97d 	bl	8000ad0 <__sinit>
 80007d6:	4b2e      	ldr	r3, [pc, #184]	; (8000890 <__swsetup_r+0xd0>)
 80007d8:	429c      	cmp	r4, r3
 80007da:	d10f      	bne.n	80007fc <__swsetup_r+0x3c>
 80007dc:	686c      	ldr	r4, [r5, #4]
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007e4:	0719      	lsls	r1, r3, #28
 80007e6:	d42c      	bmi.n	8000842 <__swsetup_r+0x82>
 80007e8:	06dd      	lsls	r5, r3, #27
 80007ea:	d411      	bmi.n	8000810 <__swsetup_r+0x50>
 80007ec:	2309      	movs	r3, #9
 80007ee:	6033      	str	r3, [r6, #0]
 80007f0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007f4:	81a3      	strh	r3, [r4, #12]
 80007f6:	f04f 30ff 	mov.w	r0, #4294967295
 80007fa:	e03e      	b.n	800087a <__swsetup_r+0xba>
 80007fc:	4b25      	ldr	r3, [pc, #148]	; (8000894 <__swsetup_r+0xd4>)
 80007fe:	429c      	cmp	r4, r3
 8000800:	d101      	bne.n	8000806 <__swsetup_r+0x46>
 8000802:	68ac      	ldr	r4, [r5, #8]
 8000804:	e7eb      	b.n	80007de <__swsetup_r+0x1e>
 8000806:	4b24      	ldr	r3, [pc, #144]	; (8000898 <__swsetup_r+0xd8>)
 8000808:	429c      	cmp	r4, r3
 800080a:	bf08      	it	eq
 800080c:	68ec      	ldreq	r4, [r5, #12]
 800080e:	e7e6      	b.n	80007de <__swsetup_r+0x1e>
 8000810:	0758      	lsls	r0, r3, #29
 8000812:	d512      	bpl.n	800083a <__swsetup_r+0x7a>
 8000814:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000816:	b141      	cbz	r1, 800082a <__swsetup_r+0x6a>
 8000818:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800081c:	4299      	cmp	r1, r3
 800081e:	d002      	beq.n	8000826 <__swsetup_r+0x66>
 8000820:	4630      	mov	r0, r6
 8000822:	f000 fa59 	bl	8000cd8 <_free_r>
 8000826:	2300      	movs	r3, #0
 8000828:	6363      	str	r3, [r4, #52]	; 0x34
 800082a:	89a3      	ldrh	r3, [r4, #12]
 800082c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000830:	81a3      	strh	r3, [r4, #12]
 8000832:	2300      	movs	r3, #0
 8000834:	6063      	str	r3, [r4, #4]
 8000836:	6923      	ldr	r3, [r4, #16]
 8000838:	6023      	str	r3, [r4, #0]
 800083a:	89a3      	ldrh	r3, [r4, #12]
 800083c:	f043 0308 	orr.w	r3, r3, #8
 8000840:	81a3      	strh	r3, [r4, #12]
 8000842:	6923      	ldr	r3, [r4, #16]
 8000844:	b94b      	cbnz	r3, 800085a <__swsetup_r+0x9a>
 8000846:	89a3      	ldrh	r3, [r4, #12]
 8000848:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800084c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000850:	d003      	beq.n	800085a <__swsetup_r+0x9a>
 8000852:	4621      	mov	r1, r4
 8000854:	4630      	mov	r0, r6
 8000856:	f000 f9ff 	bl	8000c58 <__smakebuf_r>
 800085a:	89a0      	ldrh	r0, [r4, #12]
 800085c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000860:	f010 0301 	ands.w	r3, r0, #1
 8000864:	d00a      	beq.n	800087c <__swsetup_r+0xbc>
 8000866:	2300      	movs	r3, #0
 8000868:	60a3      	str	r3, [r4, #8]
 800086a:	6963      	ldr	r3, [r4, #20]
 800086c:	425b      	negs	r3, r3
 800086e:	61a3      	str	r3, [r4, #24]
 8000870:	6923      	ldr	r3, [r4, #16]
 8000872:	b943      	cbnz	r3, 8000886 <__swsetup_r+0xc6>
 8000874:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000878:	d1ba      	bne.n	80007f0 <__swsetup_r+0x30>
 800087a:	bd70      	pop	{r4, r5, r6, pc}
 800087c:	0781      	lsls	r1, r0, #30
 800087e:	bf58      	it	pl
 8000880:	6963      	ldrpl	r3, [r4, #20]
 8000882:	60a3      	str	r3, [r4, #8]
 8000884:	e7f4      	b.n	8000870 <__swsetup_r+0xb0>
 8000886:	2000      	movs	r0, #0
 8000888:	e7f7      	b.n	800087a <__swsetup_r+0xba>
 800088a:	bf00      	nop
 800088c:	20000000 	.word	0x20000000
 8000890:	08001640 	.word	0x08001640
 8000894:	08001660 	.word	0x08001660
 8000898:	08001620 	.word	0x08001620

0800089c <__sflush_r>:
 800089c:	898a      	ldrh	r2, [r1, #12]
 800089e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008a2:	4605      	mov	r5, r0
 80008a4:	0710      	lsls	r0, r2, #28
 80008a6:	460c      	mov	r4, r1
 80008a8:	d458      	bmi.n	800095c <__sflush_r+0xc0>
 80008aa:	684b      	ldr	r3, [r1, #4]
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	dc05      	bgt.n	80008bc <__sflush_r+0x20>
 80008b0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008b2:	2b00      	cmp	r3, #0
 80008b4:	dc02      	bgt.n	80008bc <__sflush_r+0x20>
 80008b6:	2000      	movs	r0, #0
 80008b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008be:	2e00      	cmp	r6, #0
 80008c0:	d0f9      	beq.n	80008b6 <__sflush_r+0x1a>
 80008c2:	2300      	movs	r3, #0
 80008c4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008c8:	682f      	ldr	r7, [r5, #0]
 80008ca:	602b      	str	r3, [r5, #0]
 80008cc:	d032      	beq.n	8000934 <__sflush_r+0x98>
 80008ce:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008d0:	89a3      	ldrh	r3, [r4, #12]
 80008d2:	075a      	lsls	r2, r3, #29
 80008d4:	d505      	bpl.n	80008e2 <__sflush_r+0x46>
 80008d6:	6863      	ldr	r3, [r4, #4]
 80008d8:	1ac0      	subs	r0, r0, r3
 80008da:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008dc:	b10b      	cbz	r3, 80008e2 <__sflush_r+0x46>
 80008de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008e0:	1ac0      	subs	r0, r0, r3
 80008e2:	2300      	movs	r3, #0
 80008e4:	4602      	mov	r2, r0
 80008e6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008e8:	6a21      	ldr	r1, [r4, #32]
 80008ea:	4628      	mov	r0, r5
 80008ec:	47b0      	blx	r6
 80008ee:	1c43      	adds	r3, r0, #1
 80008f0:	89a3      	ldrh	r3, [r4, #12]
 80008f2:	d106      	bne.n	8000902 <__sflush_r+0x66>
 80008f4:	6829      	ldr	r1, [r5, #0]
 80008f6:	291d      	cmp	r1, #29
 80008f8:	d82c      	bhi.n	8000954 <__sflush_r+0xb8>
 80008fa:	4a2a      	ldr	r2, [pc, #168]	; (80009a4 <__sflush_r+0x108>)
 80008fc:	40ca      	lsrs	r2, r1
 80008fe:	07d6      	lsls	r6, r2, #31
 8000900:	d528      	bpl.n	8000954 <__sflush_r+0xb8>
 8000902:	2200      	movs	r2, #0
 8000904:	6062      	str	r2, [r4, #4]
 8000906:	04d9      	lsls	r1, r3, #19
 8000908:	6922      	ldr	r2, [r4, #16]
 800090a:	6022      	str	r2, [r4, #0]
 800090c:	d504      	bpl.n	8000918 <__sflush_r+0x7c>
 800090e:	1c42      	adds	r2, r0, #1
 8000910:	d101      	bne.n	8000916 <__sflush_r+0x7a>
 8000912:	682b      	ldr	r3, [r5, #0]
 8000914:	b903      	cbnz	r3, 8000918 <__sflush_r+0x7c>
 8000916:	6560      	str	r0, [r4, #84]	; 0x54
 8000918:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800091a:	602f      	str	r7, [r5, #0]
 800091c:	2900      	cmp	r1, #0
 800091e:	d0ca      	beq.n	80008b6 <__sflush_r+0x1a>
 8000920:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000924:	4299      	cmp	r1, r3
 8000926:	d002      	beq.n	800092e <__sflush_r+0x92>
 8000928:	4628      	mov	r0, r5
 800092a:	f000 f9d5 	bl	8000cd8 <_free_r>
 800092e:	2000      	movs	r0, #0
 8000930:	6360      	str	r0, [r4, #52]	; 0x34
 8000932:	e7c1      	b.n	80008b8 <__sflush_r+0x1c>
 8000934:	6a21      	ldr	r1, [r4, #32]
 8000936:	2301      	movs	r3, #1
 8000938:	4628      	mov	r0, r5
 800093a:	47b0      	blx	r6
 800093c:	1c41      	adds	r1, r0, #1
 800093e:	d1c7      	bne.n	80008d0 <__sflush_r+0x34>
 8000940:	682b      	ldr	r3, [r5, #0]
 8000942:	2b00      	cmp	r3, #0
 8000944:	d0c4      	beq.n	80008d0 <__sflush_r+0x34>
 8000946:	2b1d      	cmp	r3, #29
 8000948:	d001      	beq.n	800094e <__sflush_r+0xb2>
 800094a:	2b16      	cmp	r3, #22
 800094c:	d101      	bne.n	8000952 <__sflush_r+0xb6>
 800094e:	602f      	str	r7, [r5, #0]
 8000950:	e7b1      	b.n	80008b6 <__sflush_r+0x1a>
 8000952:	89a3      	ldrh	r3, [r4, #12]
 8000954:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000958:	81a3      	strh	r3, [r4, #12]
 800095a:	e7ad      	b.n	80008b8 <__sflush_r+0x1c>
 800095c:	690f      	ldr	r7, [r1, #16]
 800095e:	2f00      	cmp	r7, #0
 8000960:	d0a9      	beq.n	80008b6 <__sflush_r+0x1a>
 8000962:	0793      	lsls	r3, r2, #30
 8000964:	680e      	ldr	r6, [r1, #0]
 8000966:	bf08      	it	eq
 8000968:	694b      	ldreq	r3, [r1, #20]
 800096a:	600f      	str	r7, [r1, #0]
 800096c:	bf18      	it	ne
 800096e:	2300      	movne	r3, #0
 8000970:	eba6 0807 	sub.w	r8, r6, r7
 8000974:	608b      	str	r3, [r1, #8]
 8000976:	f1b8 0f00 	cmp.w	r8, #0
 800097a:	dd9c      	ble.n	80008b6 <__sflush_r+0x1a>
 800097c:	6a21      	ldr	r1, [r4, #32]
 800097e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000980:	4643      	mov	r3, r8
 8000982:	463a      	mov	r2, r7
 8000984:	4628      	mov	r0, r5
 8000986:	47b0      	blx	r6
 8000988:	2800      	cmp	r0, #0
 800098a:	dc06      	bgt.n	800099a <__sflush_r+0xfe>
 800098c:	89a3      	ldrh	r3, [r4, #12]
 800098e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000992:	81a3      	strh	r3, [r4, #12]
 8000994:	f04f 30ff 	mov.w	r0, #4294967295
 8000998:	e78e      	b.n	80008b8 <__sflush_r+0x1c>
 800099a:	4407      	add	r7, r0
 800099c:	eba8 0800 	sub.w	r8, r8, r0
 80009a0:	e7e9      	b.n	8000976 <__sflush_r+0xda>
 80009a2:	bf00      	nop
 80009a4:	20400001 	.word	0x20400001

080009a8 <_fflush_r>:
 80009a8:	b538      	push	{r3, r4, r5, lr}
 80009aa:	690b      	ldr	r3, [r1, #16]
 80009ac:	4605      	mov	r5, r0
 80009ae:	460c      	mov	r4, r1
 80009b0:	b913      	cbnz	r3, 80009b8 <_fflush_r+0x10>
 80009b2:	2500      	movs	r5, #0
 80009b4:	4628      	mov	r0, r5
 80009b6:	bd38      	pop	{r3, r4, r5, pc}
 80009b8:	b118      	cbz	r0, 80009c2 <_fflush_r+0x1a>
 80009ba:	6983      	ldr	r3, [r0, #24]
 80009bc:	b90b      	cbnz	r3, 80009c2 <_fflush_r+0x1a>
 80009be:	f000 f887 	bl	8000ad0 <__sinit>
 80009c2:	4b14      	ldr	r3, [pc, #80]	; (8000a14 <_fflush_r+0x6c>)
 80009c4:	429c      	cmp	r4, r3
 80009c6:	d11b      	bne.n	8000a00 <_fflush_r+0x58>
 80009c8:	686c      	ldr	r4, [r5, #4]
 80009ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009ce:	2b00      	cmp	r3, #0
 80009d0:	d0ef      	beq.n	80009b2 <_fflush_r+0xa>
 80009d2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009d4:	07d0      	lsls	r0, r2, #31
 80009d6:	d404      	bmi.n	80009e2 <_fflush_r+0x3a>
 80009d8:	0599      	lsls	r1, r3, #22
 80009da:	d402      	bmi.n	80009e2 <_fflush_r+0x3a>
 80009dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009de:	f000 f915 	bl	8000c0c <__retarget_lock_acquire_recursive>
 80009e2:	4628      	mov	r0, r5
 80009e4:	4621      	mov	r1, r4
 80009e6:	f7ff ff59 	bl	800089c <__sflush_r>
 80009ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009ec:	07da      	lsls	r2, r3, #31
 80009ee:	4605      	mov	r5, r0
 80009f0:	d4e0      	bmi.n	80009b4 <_fflush_r+0xc>
 80009f2:	89a3      	ldrh	r3, [r4, #12]
 80009f4:	059b      	lsls	r3, r3, #22
 80009f6:	d4dd      	bmi.n	80009b4 <_fflush_r+0xc>
 80009f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009fa:	f000 f908 	bl	8000c0e <__retarget_lock_release_recursive>
 80009fe:	e7d9      	b.n	80009b4 <_fflush_r+0xc>
 8000a00:	4b05      	ldr	r3, [pc, #20]	; (8000a18 <_fflush_r+0x70>)
 8000a02:	429c      	cmp	r4, r3
 8000a04:	d101      	bne.n	8000a0a <_fflush_r+0x62>
 8000a06:	68ac      	ldr	r4, [r5, #8]
 8000a08:	e7df      	b.n	80009ca <_fflush_r+0x22>
 8000a0a:	4b04      	ldr	r3, [pc, #16]	; (8000a1c <_fflush_r+0x74>)
 8000a0c:	429c      	cmp	r4, r3
 8000a0e:	bf08      	it	eq
 8000a10:	68ec      	ldreq	r4, [r5, #12]
 8000a12:	e7da      	b.n	80009ca <_fflush_r+0x22>
 8000a14:	08001640 	.word	0x08001640
 8000a18:	08001660 	.word	0x08001660
 8000a1c:	08001620 	.word	0x08001620

08000a20 <std>:
 8000a20:	2300      	movs	r3, #0
 8000a22:	b510      	push	{r4, lr}
 8000a24:	4604      	mov	r4, r0
 8000a26:	e9c0 3300 	strd	r3, r3, [r0]
 8000a2a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a2e:	6083      	str	r3, [r0, #8]
 8000a30:	8181      	strh	r1, [r0, #12]
 8000a32:	6643      	str	r3, [r0, #100]	; 0x64
 8000a34:	81c2      	strh	r2, [r0, #14]
 8000a36:	6183      	str	r3, [r0, #24]
 8000a38:	4619      	mov	r1, r3
 8000a3a:	2208      	movs	r2, #8
 8000a3c:	305c      	adds	r0, #92	; 0x5c
 8000a3e:	f7ff fdd7 	bl	80005f0 <memset>
 8000a42:	4b05      	ldr	r3, [pc, #20]	; (8000a58 <std+0x38>)
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
 8000a46:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <std+0x3c>)
 8000a48:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a4a:	4b05      	ldr	r3, [pc, #20]	; (8000a60 <std+0x40>)
 8000a4c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a4e:	4b05      	ldr	r3, [pc, #20]	; (8000a64 <std+0x44>)
 8000a50:	6224      	str	r4, [r4, #32]
 8000a52:	6323      	str	r3, [r4, #48]	; 0x30
 8000a54:	bd10      	pop	{r4, pc}
 8000a56:	bf00      	nop
 8000a58:	08001421 	.word	0x08001421
 8000a5c:	08001443 	.word	0x08001443
 8000a60:	0800147b 	.word	0x0800147b
 8000a64:	0800149f 	.word	0x0800149f

08000a68 <_cleanup_r>:
 8000a68:	4901      	ldr	r1, [pc, #4]	; (8000a70 <_cleanup_r+0x8>)
 8000a6a:	f000 b8af 	b.w	8000bcc <_fwalk_reent>
 8000a6e:	bf00      	nop
 8000a70:	080009a9 	.word	0x080009a9

08000a74 <__sfmoreglue>:
 8000a74:	b570      	push	{r4, r5, r6, lr}
 8000a76:	1e4a      	subs	r2, r1, #1
 8000a78:	2568      	movs	r5, #104	; 0x68
 8000a7a:	4355      	muls	r5, r2
 8000a7c:	460e      	mov	r6, r1
 8000a7e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a82:	f000 f977 	bl	8000d74 <_malloc_r>
 8000a86:	4604      	mov	r4, r0
 8000a88:	b140      	cbz	r0, 8000a9c <__sfmoreglue+0x28>
 8000a8a:	2100      	movs	r1, #0
 8000a8c:	e9c0 1600 	strd	r1, r6, [r0]
 8000a90:	300c      	adds	r0, #12
 8000a92:	60a0      	str	r0, [r4, #8]
 8000a94:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a98:	f7ff fdaa 	bl	80005f0 <memset>
 8000a9c:	4620      	mov	r0, r4
 8000a9e:	bd70      	pop	{r4, r5, r6, pc}

08000aa0 <__sfp_lock_acquire>:
 8000aa0:	4801      	ldr	r0, [pc, #4]	; (8000aa8 <__sfp_lock_acquire+0x8>)
 8000aa2:	f000 b8b3 	b.w	8000c0c <__retarget_lock_acquire_recursive>
 8000aa6:	bf00      	nop
 8000aa8:	20000094 	.word	0x20000094

08000aac <__sfp_lock_release>:
 8000aac:	4801      	ldr	r0, [pc, #4]	; (8000ab4 <__sfp_lock_release+0x8>)
 8000aae:	f000 b8ae 	b.w	8000c0e <__retarget_lock_release_recursive>
 8000ab2:	bf00      	nop
 8000ab4:	20000094 	.word	0x20000094

08000ab8 <__sinit_lock_acquire>:
 8000ab8:	4801      	ldr	r0, [pc, #4]	; (8000ac0 <__sinit_lock_acquire+0x8>)
 8000aba:	f000 b8a7 	b.w	8000c0c <__retarget_lock_acquire_recursive>
 8000abe:	bf00      	nop
 8000ac0:	2000008f 	.word	0x2000008f

08000ac4 <__sinit_lock_release>:
 8000ac4:	4801      	ldr	r0, [pc, #4]	; (8000acc <__sinit_lock_release+0x8>)
 8000ac6:	f000 b8a2 	b.w	8000c0e <__retarget_lock_release_recursive>
 8000aca:	bf00      	nop
 8000acc:	2000008f 	.word	0x2000008f

08000ad0 <__sinit>:
 8000ad0:	b510      	push	{r4, lr}
 8000ad2:	4604      	mov	r4, r0
 8000ad4:	f7ff fff0 	bl	8000ab8 <__sinit_lock_acquire>
 8000ad8:	69a3      	ldr	r3, [r4, #24]
 8000ada:	b11b      	cbz	r3, 8000ae4 <__sinit+0x14>
 8000adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ae0:	f7ff bff0 	b.w	8000ac4 <__sinit_lock_release>
 8000ae4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ae8:	6523      	str	r3, [r4, #80]	; 0x50
 8000aea:	4b13      	ldr	r3, [pc, #76]	; (8000b38 <__sinit+0x68>)
 8000aec:	4a13      	ldr	r2, [pc, #76]	; (8000b3c <__sinit+0x6c>)
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	62a2      	str	r2, [r4, #40]	; 0x28
 8000af2:	42a3      	cmp	r3, r4
 8000af4:	bf04      	itt	eq
 8000af6:	2301      	moveq	r3, #1
 8000af8:	61a3      	streq	r3, [r4, #24]
 8000afa:	4620      	mov	r0, r4
 8000afc:	f000 f820 	bl	8000b40 <__sfp>
 8000b00:	6060      	str	r0, [r4, #4]
 8000b02:	4620      	mov	r0, r4
 8000b04:	f000 f81c 	bl	8000b40 <__sfp>
 8000b08:	60a0      	str	r0, [r4, #8]
 8000b0a:	4620      	mov	r0, r4
 8000b0c:	f000 f818 	bl	8000b40 <__sfp>
 8000b10:	2200      	movs	r2, #0
 8000b12:	60e0      	str	r0, [r4, #12]
 8000b14:	2104      	movs	r1, #4
 8000b16:	6860      	ldr	r0, [r4, #4]
 8000b18:	f7ff ff82 	bl	8000a20 <std>
 8000b1c:	68a0      	ldr	r0, [r4, #8]
 8000b1e:	2201      	movs	r2, #1
 8000b20:	2109      	movs	r1, #9
 8000b22:	f7ff ff7d 	bl	8000a20 <std>
 8000b26:	68e0      	ldr	r0, [r4, #12]
 8000b28:	2202      	movs	r2, #2
 8000b2a:	2112      	movs	r1, #18
 8000b2c:	f7ff ff78 	bl	8000a20 <std>
 8000b30:	2301      	movs	r3, #1
 8000b32:	61a3      	str	r3, [r4, #24]
 8000b34:	e7d2      	b.n	8000adc <__sinit+0xc>
 8000b36:	bf00      	nop
 8000b38:	0800161c 	.word	0x0800161c
 8000b3c:	08000a69 	.word	0x08000a69

08000b40 <__sfp>:
 8000b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b42:	4607      	mov	r7, r0
 8000b44:	f7ff ffac 	bl	8000aa0 <__sfp_lock_acquire>
 8000b48:	4b1e      	ldr	r3, [pc, #120]	; (8000bc4 <__sfp+0x84>)
 8000b4a:	681e      	ldr	r6, [r3, #0]
 8000b4c:	69b3      	ldr	r3, [r6, #24]
 8000b4e:	b913      	cbnz	r3, 8000b56 <__sfp+0x16>
 8000b50:	4630      	mov	r0, r6
 8000b52:	f7ff ffbd 	bl	8000ad0 <__sinit>
 8000b56:	3648      	adds	r6, #72	; 0x48
 8000b58:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b5c:	3b01      	subs	r3, #1
 8000b5e:	d503      	bpl.n	8000b68 <__sfp+0x28>
 8000b60:	6833      	ldr	r3, [r6, #0]
 8000b62:	b30b      	cbz	r3, 8000ba8 <__sfp+0x68>
 8000b64:	6836      	ldr	r6, [r6, #0]
 8000b66:	e7f7      	b.n	8000b58 <__sfp+0x18>
 8000b68:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b6c:	b9d5      	cbnz	r5, 8000ba4 <__sfp+0x64>
 8000b6e:	4b16      	ldr	r3, [pc, #88]	; (8000bc8 <__sfp+0x88>)
 8000b70:	60e3      	str	r3, [r4, #12]
 8000b72:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b76:	6665      	str	r5, [r4, #100]	; 0x64
 8000b78:	f000 f847 	bl	8000c0a <__retarget_lock_init_recursive>
 8000b7c:	f7ff ff96 	bl	8000aac <__sfp_lock_release>
 8000b80:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b84:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b88:	6025      	str	r5, [r4, #0]
 8000b8a:	61a5      	str	r5, [r4, #24]
 8000b8c:	2208      	movs	r2, #8
 8000b8e:	4629      	mov	r1, r5
 8000b90:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b94:	f7ff fd2c 	bl	80005f0 <memset>
 8000b98:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b9c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000ba0:	4620      	mov	r0, r4
 8000ba2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ba4:	3468      	adds	r4, #104	; 0x68
 8000ba6:	e7d9      	b.n	8000b5c <__sfp+0x1c>
 8000ba8:	2104      	movs	r1, #4
 8000baa:	4638      	mov	r0, r7
 8000bac:	f7ff ff62 	bl	8000a74 <__sfmoreglue>
 8000bb0:	4604      	mov	r4, r0
 8000bb2:	6030      	str	r0, [r6, #0]
 8000bb4:	2800      	cmp	r0, #0
 8000bb6:	d1d5      	bne.n	8000b64 <__sfp+0x24>
 8000bb8:	f7ff ff78 	bl	8000aac <__sfp_lock_release>
 8000bbc:	230c      	movs	r3, #12
 8000bbe:	603b      	str	r3, [r7, #0]
 8000bc0:	e7ee      	b.n	8000ba0 <__sfp+0x60>
 8000bc2:	bf00      	nop
 8000bc4:	0800161c 	.word	0x0800161c
 8000bc8:	ffff0001 	.word	0xffff0001

08000bcc <_fwalk_reent>:
 8000bcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bd0:	4606      	mov	r6, r0
 8000bd2:	4688      	mov	r8, r1
 8000bd4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bd8:	2700      	movs	r7, #0
 8000bda:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bde:	f1b9 0901 	subs.w	r9, r9, #1
 8000be2:	d505      	bpl.n	8000bf0 <_fwalk_reent+0x24>
 8000be4:	6824      	ldr	r4, [r4, #0]
 8000be6:	2c00      	cmp	r4, #0
 8000be8:	d1f7      	bne.n	8000bda <_fwalk_reent+0xe>
 8000bea:	4638      	mov	r0, r7
 8000bec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bf0:	89ab      	ldrh	r3, [r5, #12]
 8000bf2:	2b01      	cmp	r3, #1
 8000bf4:	d907      	bls.n	8000c06 <_fwalk_reent+0x3a>
 8000bf6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bfa:	3301      	adds	r3, #1
 8000bfc:	d003      	beq.n	8000c06 <_fwalk_reent+0x3a>
 8000bfe:	4629      	mov	r1, r5
 8000c00:	4630      	mov	r0, r6
 8000c02:	47c0      	blx	r8
 8000c04:	4307      	orrs	r7, r0
 8000c06:	3568      	adds	r5, #104	; 0x68
 8000c08:	e7e9      	b.n	8000bde <_fwalk_reent+0x12>

08000c0a <__retarget_lock_init_recursive>:
 8000c0a:	4770      	bx	lr

08000c0c <__retarget_lock_acquire_recursive>:
 8000c0c:	4770      	bx	lr

08000c0e <__retarget_lock_release_recursive>:
 8000c0e:	4770      	bx	lr

08000c10 <__swhatbuf_r>:
 8000c10:	b570      	push	{r4, r5, r6, lr}
 8000c12:	460e      	mov	r6, r1
 8000c14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c18:	2900      	cmp	r1, #0
 8000c1a:	b096      	sub	sp, #88	; 0x58
 8000c1c:	4614      	mov	r4, r2
 8000c1e:	461d      	mov	r5, r3
 8000c20:	da07      	bge.n	8000c32 <__swhatbuf_r+0x22>
 8000c22:	2300      	movs	r3, #0
 8000c24:	602b      	str	r3, [r5, #0]
 8000c26:	89b3      	ldrh	r3, [r6, #12]
 8000c28:	061a      	lsls	r2, r3, #24
 8000c2a:	d410      	bmi.n	8000c4e <__swhatbuf_r+0x3e>
 8000c2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c30:	e00e      	b.n	8000c50 <__swhatbuf_r+0x40>
 8000c32:	466a      	mov	r2, sp
 8000c34:	f000 fc5a 	bl	80014ec <_fstat_r>
 8000c38:	2800      	cmp	r0, #0
 8000c3a:	dbf2      	blt.n	8000c22 <__swhatbuf_r+0x12>
 8000c3c:	9a01      	ldr	r2, [sp, #4]
 8000c3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c42:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c46:	425a      	negs	r2, r3
 8000c48:	415a      	adcs	r2, r3
 8000c4a:	602a      	str	r2, [r5, #0]
 8000c4c:	e7ee      	b.n	8000c2c <__swhatbuf_r+0x1c>
 8000c4e:	2340      	movs	r3, #64	; 0x40
 8000c50:	2000      	movs	r0, #0
 8000c52:	6023      	str	r3, [r4, #0]
 8000c54:	b016      	add	sp, #88	; 0x58
 8000c56:	bd70      	pop	{r4, r5, r6, pc}

08000c58 <__smakebuf_r>:
 8000c58:	898b      	ldrh	r3, [r1, #12]
 8000c5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c5c:	079d      	lsls	r5, r3, #30
 8000c5e:	4606      	mov	r6, r0
 8000c60:	460c      	mov	r4, r1
 8000c62:	d507      	bpl.n	8000c74 <__smakebuf_r+0x1c>
 8000c64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c68:	6023      	str	r3, [r4, #0]
 8000c6a:	6123      	str	r3, [r4, #16]
 8000c6c:	2301      	movs	r3, #1
 8000c6e:	6163      	str	r3, [r4, #20]
 8000c70:	b002      	add	sp, #8
 8000c72:	bd70      	pop	{r4, r5, r6, pc}
 8000c74:	ab01      	add	r3, sp, #4
 8000c76:	466a      	mov	r2, sp
 8000c78:	f7ff ffca 	bl	8000c10 <__swhatbuf_r>
 8000c7c:	9900      	ldr	r1, [sp, #0]
 8000c7e:	4605      	mov	r5, r0
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 f877 	bl	8000d74 <_malloc_r>
 8000c86:	b948      	cbnz	r0, 8000c9c <__smakebuf_r+0x44>
 8000c88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c8c:	059a      	lsls	r2, r3, #22
 8000c8e:	d4ef      	bmi.n	8000c70 <__smakebuf_r+0x18>
 8000c90:	f023 0303 	bic.w	r3, r3, #3
 8000c94:	f043 0302 	orr.w	r3, r3, #2
 8000c98:	81a3      	strh	r3, [r4, #12]
 8000c9a:	e7e3      	b.n	8000c64 <__smakebuf_r+0xc>
 8000c9c:	4b0d      	ldr	r3, [pc, #52]	; (8000cd4 <__smakebuf_r+0x7c>)
 8000c9e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ca0:	89a3      	ldrh	r3, [r4, #12]
 8000ca2:	6020      	str	r0, [r4, #0]
 8000ca4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ca8:	81a3      	strh	r3, [r4, #12]
 8000caa:	9b00      	ldr	r3, [sp, #0]
 8000cac:	6163      	str	r3, [r4, #20]
 8000cae:	9b01      	ldr	r3, [sp, #4]
 8000cb0:	6120      	str	r0, [r4, #16]
 8000cb2:	b15b      	cbz	r3, 8000ccc <__smakebuf_r+0x74>
 8000cb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cb8:	4630      	mov	r0, r6
 8000cba:	f000 fc29 	bl	8001510 <_isatty_r>
 8000cbe:	b128      	cbz	r0, 8000ccc <__smakebuf_r+0x74>
 8000cc0:	89a3      	ldrh	r3, [r4, #12]
 8000cc2:	f023 0303 	bic.w	r3, r3, #3
 8000cc6:	f043 0301 	orr.w	r3, r3, #1
 8000cca:	81a3      	strh	r3, [r4, #12]
 8000ccc:	89a0      	ldrh	r0, [r4, #12]
 8000cce:	4305      	orrs	r5, r0
 8000cd0:	81a5      	strh	r5, [r4, #12]
 8000cd2:	e7cd      	b.n	8000c70 <__smakebuf_r+0x18>
 8000cd4:	08000a69 	.word	0x08000a69

08000cd8 <_free_r>:
 8000cd8:	b538      	push	{r3, r4, r5, lr}
 8000cda:	4605      	mov	r5, r0
 8000cdc:	2900      	cmp	r1, #0
 8000cde:	d045      	beq.n	8000d6c <_free_r+0x94>
 8000ce0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ce4:	1f0c      	subs	r4, r1, #4
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	bfb8      	it	lt
 8000cea:	18e4      	addlt	r4, r4, r3
 8000cec:	f000 fc32 	bl	8001554 <__malloc_lock>
 8000cf0:	4a1f      	ldr	r2, [pc, #124]	; (8000d70 <_free_r+0x98>)
 8000cf2:	6813      	ldr	r3, [r2, #0]
 8000cf4:	4610      	mov	r0, r2
 8000cf6:	b933      	cbnz	r3, 8000d06 <_free_r+0x2e>
 8000cf8:	6063      	str	r3, [r4, #4]
 8000cfa:	6014      	str	r4, [r2, #0]
 8000cfc:	4628      	mov	r0, r5
 8000cfe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d02:	f000 bc2d 	b.w	8001560 <__malloc_unlock>
 8000d06:	42a3      	cmp	r3, r4
 8000d08:	d90b      	bls.n	8000d22 <_free_r+0x4a>
 8000d0a:	6821      	ldr	r1, [r4, #0]
 8000d0c:	1862      	adds	r2, r4, r1
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	bf04      	itt	eq
 8000d12:	681a      	ldreq	r2, [r3, #0]
 8000d14:	685b      	ldreq	r3, [r3, #4]
 8000d16:	6063      	str	r3, [r4, #4]
 8000d18:	bf04      	itt	eq
 8000d1a:	1852      	addeq	r2, r2, r1
 8000d1c:	6022      	streq	r2, [r4, #0]
 8000d1e:	6004      	str	r4, [r0, #0]
 8000d20:	e7ec      	b.n	8000cfc <_free_r+0x24>
 8000d22:	461a      	mov	r2, r3
 8000d24:	685b      	ldr	r3, [r3, #4]
 8000d26:	b10b      	cbz	r3, 8000d2c <_free_r+0x54>
 8000d28:	42a3      	cmp	r3, r4
 8000d2a:	d9fa      	bls.n	8000d22 <_free_r+0x4a>
 8000d2c:	6811      	ldr	r1, [r2, #0]
 8000d2e:	1850      	adds	r0, r2, r1
 8000d30:	42a0      	cmp	r0, r4
 8000d32:	d10b      	bne.n	8000d4c <_free_r+0x74>
 8000d34:	6820      	ldr	r0, [r4, #0]
 8000d36:	4401      	add	r1, r0
 8000d38:	1850      	adds	r0, r2, r1
 8000d3a:	4283      	cmp	r3, r0
 8000d3c:	6011      	str	r1, [r2, #0]
 8000d3e:	d1dd      	bne.n	8000cfc <_free_r+0x24>
 8000d40:	6818      	ldr	r0, [r3, #0]
 8000d42:	685b      	ldr	r3, [r3, #4]
 8000d44:	6053      	str	r3, [r2, #4]
 8000d46:	4401      	add	r1, r0
 8000d48:	6011      	str	r1, [r2, #0]
 8000d4a:	e7d7      	b.n	8000cfc <_free_r+0x24>
 8000d4c:	d902      	bls.n	8000d54 <_free_r+0x7c>
 8000d4e:	230c      	movs	r3, #12
 8000d50:	602b      	str	r3, [r5, #0]
 8000d52:	e7d3      	b.n	8000cfc <_free_r+0x24>
 8000d54:	6820      	ldr	r0, [r4, #0]
 8000d56:	1821      	adds	r1, r4, r0
 8000d58:	428b      	cmp	r3, r1
 8000d5a:	bf04      	itt	eq
 8000d5c:	6819      	ldreq	r1, [r3, #0]
 8000d5e:	685b      	ldreq	r3, [r3, #4]
 8000d60:	6063      	str	r3, [r4, #4]
 8000d62:	bf04      	itt	eq
 8000d64:	1809      	addeq	r1, r1, r0
 8000d66:	6021      	streq	r1, [r4, #0]
 8000d68:	6054      	str	r4, [r2, #4]
 8000d6a:	e7c7      	b.n	8000cfc <_free_r+0x24>
 8000d6c:	bd38      	pop	{r3, r4, r5, pc}
 8000d6e:	bf00      	nop
 8000d70:	20000084 	.word	0x20000084

08000d74 <_malloc_r>:
 8000d74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d76:	1ccd      	adds	r5, r1, #3
 8000d78:	f025 0503 	bic.w	r5, r5, #3
 8000d7c:	3508      	adds	r5, #8
 8000d7e:	2d0c      	cmp	r5, #12
 8000d80:	bf38      	it	cc
 8000d82:	250c      	movcc	r5, #12
 8000d84:	2d00      	cmp	r5, #0
 8000d86:	4606      	mov	r6, r0
 8000d88:	db01      	blt.n	8000d8e <_malloc_r+0x1a>
 8000d8a:	42a9      	cmp	r1, r5
 8000d8c:	d903      	bls.n	8000d96 <_malloc_r+0x22>
 8000d8e:	230c      	movs	r3, #12
 8000d90:	6033      	str	r3, [r6, #0]
 8000d92:	2000      	movs	r0, #0
 8000d94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d96:	f000 fbdd 	bl	8001554 <__malloc_lock>
 8000d9a:	4921      	ldr	r1, [pc, #132]	; (8000e20 <_malloc_r+0xac>)
 8000d9c:	680a      	ldr	r2, [r1, #0]
 8000d9e:	4614      	mov	r4, r2
 8000da0:	b99c      	cbnz	r4, 8000dca <_malloc_r+0x56>
 8000da2:	4f20      	ldr	r7, [pc, #128]	; (8000e24 <_malloc_r+0xb0>)
 8000da4:	683b      	ldr	r3, [r7, #0]
 8000da6:	b923      	cbnz	r3, 8000db2 <_malloc_r+0x3e>
 8000da8:	4621      	mov	r1, r4
 8000daa:	4630      	mov	r0, r6
 8000dac:	f000 fb28 	bl	8001400 <_sbrk_r>
 8000db0:	6038      	str	r0, [r7, #0]
 8000db2:	4629      	mov	r1, r5
 8000db4:	4630      	mov	r0, r6
 8000db6:	f000 fb23 	bl	8001400 <_sbrk_r>
 8000dba:	1c43      	adds	r3, r0, #1
 8000dbc:	d123      	bne.n	8000e06 <_malloc_r+0x92>
 8000dbe:	230c      	movs	r3, #12
 8000dc0:	6033      	str	r3, [r6, #0]
 8000dc2:	4630      	mov	r0, r6
 8000dc4:	f000 fbcc 	bl	8001560 <__malloc_unlock>
 8000dc8:	e7e3      	b.n	8000d92 <_malloc_r+0x1e>
 8000dca:	6823      	ldr	r3, [r4, #0]
 8000dcc:	1b5b      	subs	r3, r3, r5
 8000dce:	d417      	bmi.n	8000e00 <_malloc_r+0x8c>
 8000dd0:	2b0b      	cmp	r3, #11
 8000dd2:	d903      	bls.n	8000ddc <_malloc_r+0x68>
 8000dd4:	6023      	str	r3, [r4, #0]
 8000dd6:	441c      	add	r4, r3
 8000dd8:	6025      	str	r5, [r4, #0]
 8000dda:	e004      	b.n	8000de6 <_malloc_r+0x72>
 8000ddc:	6863      	ldr	r3, [r4, #4]
 8000dde:	42a2      	cmp	r2, r4
 8000de0:	bf0c      	ite	eq
 8000de2:	600b      	streq	r3, [r1, #0]
 8000de4:	6053      	strne	r3, [r2, #4]
 8000de6:	4630      	mov	r0, r6
 8000de8:	f000 fbba 	bl	8001560 <__malloc_unlock>
 8000dec:	f104 000b 	add.w	r0, r4, #11
 8000df0:	1d23      	adds	r3, r4, #4
 8000df2:	f020 0007 	bic.w	r0, r0, #7
 8000df6:	1ac2      	subs	r2, r0, r3
 8000df8:	d0cc      	beq.n	8000d94 <_malloc_r+0x20>
 8000dfa:	1a1b      	subs	r3, r3, r0
 8000dfc:	50a3      	str	r3, [r4, r2]
 8000dfe:	e7c9      	b.n	8000d94 <_malloc_r+0x20>
 8000e00:	4622      	mov	r2, r4
 8000e02:	6864      	ldr	r4, [r4, #4]
 8000e04:	e7cc      	b.n	8000da0 <_malloc_r+0x2c>
 8000e06:	1cc4      	adds	r4, r0, #3
 8000e08:	f024 0403 	bic.w	r4, r4, #3
 8000e0c:	42a0      	cmp	r0, r4
 8000e0e:	d0e3      	beq.n	8000dd8 <_malloc_r+0x64>
 8000e10:	1a21      	subs	r1, r4, r0
 8000e12:	4630      	mov	r0, r6
 8000e14:	f000 faf4 	bl	8001400 <_sbrk_r>
 8000e18:	3001      	adds	r0, #1
 8000e1a:	d1dd      	bne.n	8000dd8 <_malloc_r+0x64>
 8000e1c:	e7cf      	b.n	8000dbe <_malloc_r+0x4a>
 8000e1e:	bf00      	nop
 8000e20:	20000084 	.word	0x20000084
 8000e24:	20000088 	.word	0x20000088

08000e28 <__sfputc_r>:
 8000e28:	6893      	ldr	r3, [r2, #8]
 8000e2a:	3b01      	subs	r3, #1
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	b410      	push	{r4}
 8000e30:	6093      	str	r3, [r2, #8]
 8000e32:	da07      	bge.n	8000e44 <__sfputc_r+0x1c>
 8000e34:	6994      	ldr	r4, [r2, #24]
 8000e36:	42a3      	cmp	r3, r4
 8000e38:	db01      	blt.n	8000e3e <__sfputc_r+0x16>
 8000e3a:	290a      	cmp	r1, #10
 8000e3c:	d102      	bne.n	8000e44 <__sfputc_r+0x1c>
 8000e3e:	bc10      	pop	{r4}
 8000e40:	f7ff bc6c 	b.w	800071c <__swbuf_r>
 8000e44:	6813      	ldr	r3, [r2, #0]
 8000e46:	1c58      	adds	r0, r3, #1
 8000e48:	6010      	str	r0, [r2, #0]
 8000e4a:	7019      	strb	r1, [r3, #0]
 8000e4c:	4608      	mov	r0, r1
 8000e4e:	bc10      	pop	{r4}
 8000e50:	4770      	bx	lr

08000e52 <__sfputs_r>:
 8000e52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e54:	4606      	mov	r6, r0
 8000e56:	460f      	mov	r7, r1
 8000e58:	4614      	mov	r4, r2
 8000e5a:	18d5      	adds	r5, r2, r3
 8000e5c:	42ac      	cmp	r4, r5
 8000e5e:	d101      	bne.n	8000e64 <__sfputs_r+0x12>
 8000e60:	2000      	movs	r0, #0
 8000e62:	e007      	b.n	8000e74 <__sfputs_r+0x22>
 8000e64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e68:	463a      	mov	r2, r7
 8000e6a:	4630      	mov	r0, r6
 8000e6c:	f7ff ffdc 	bl	8000e28 <__sfputc_r>
 8000e70:	1c43      	adds	r3, r0, #1
 8000e72:	d1f3      	bne.n	8000e5c <__sfputs_r+0xa>
 8000e74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e78 <_vfiprintf_r>:
 8000e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e7c:	460d      	mov	r5, r1
 8000e7e:	b09d      	sub	sp, #116	; 0x74
 8000e80:	4614      	mov	r4, r2
 8000e82:	4698      	mov	r8, r3
 8000e84:	4606      	mov	r6, r0
 8000e86:	b118      	cbz	r0, 8000e90 <_vfiprintf_r+0x18>
 8000e88:	6983      	ldr	r3, [r0, #24]
 8000e8a:	b90b      	cbnz	r3, 8000e90 <_vfiprintf_r+0x18>
 8000e8c:	f7ff fe20 	bl	8000ad0 <__sinit>
 8000e90:	4b89      	ldr	r3, [pc, #548]	; (80010b8 <_vfiprintf_r+0x240>)
 8000e92:	429d      	cmp	r5, r3
 8000e94:	d11b      	bne.n	8000ece <_vfiprintf_r+0x56>
 8000e96:	6875      	ldr	r5, [r6, #4]
 8000e98:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e9a:	07d9      	lsls	r1, r3, #31
 8000e9c:	d405      	bmi.n	8000eaa <_vfiprintf_r+0x32>
 8000e9e:	89ab      	ldrh	r3, [r5, #12]
 8000ea0:	059a      	lsls	r2, r3, #22
 8000ea2:	d402      	bmi.n	8000eaa <_vfiprintf_r+0x32>
 8000ea4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ea6:	f7ff feb1 	bl	8000c0c <__retarget_lock_acquire_recursive>
 8000eaa:	89ab      	ldrh	r3, [r5, #12]
 8000eac:	071b      	lsls	r3, r3, #28
 8000eae:	d501      	bpl.n	8000eb4 <_vfiprintf_r+0x3c>
 8000eb0:	692b      	ldr	r3, [r5, #16]
 8000eb2:	b9eb      	cbnz	r3, 8000ef0 <_vfiprintf_r+0x78>
 8000eb4:	4629      	mov	r1, r5
 8000eb6:	4630      	mov	r0, r6
 8000eb8:	f7ff fc82 	bl	80007c0 <__swsetup_r>
 8000ebc:	b1c0      	cbz	r0, 8000ef0 <_vfiprintf_r+0x78>
 8000ebe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ec0:	07dc      	lsls	r4, r3, #31
 8000ec2:	d50e      	bpl.n	8000ee2 <_vfiprintf_r+0x6a>
 8000ec4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ec8:	b01d      	add	sp, #116	; 0x74
 8000eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ece:	4b7b      	ldr	r3, [pc, #492]	; (80010bc <_vfiprintf_r+0x244>)
 8000ed0:	429d      	cmp	r5, r3
 8000ed2:	d101      	bne.n	8000ed8 <_vfiprintf_r+0x60>
 8000ed4:	68b5      	ldr	r5, [r6, #8]
 8000ed6:	e7df      	b.n	8000e98 <_vfiprintf_r+0x20>
 8000ed8:	4b79      	ldr	r3, [pc, #484]	; (80010c0 <_vfiprintf_r+0x248>)
 8000eda:	429d      	cmp	r5, r3
 8000edc:	bf08      	it	eq
 8000ede:	68f5      	ldreq	r5, [r6, #12]
 8000ee0:	e7da      	b.n	8000e98 <_vfiprintf_r+0x20>
 8000ee2:	89ab      	ldrh	r3, [r5, #12]
 8000ee4:	0598      	lsls	r0, r3, #22
 8000ee6:	d4ed      	bmi.n	8000ec4 <_vfiprintf_r+0x4c>
 8000ee8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eea:	f7ff fe90 	bl	8000c0e <__retarget_lock_release_recursive>
 8000eee:	e7e9      	b.n	8000ec4 <_vfiprintf_r+0x4c>
 8000ef0:	2300      	movs	r3, #0
 8000ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8000ef4:	2320      	movs	r3, #32
 8000ef6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000efa:	f8cd 800c 	str.w	r8, [sp, #12]
 8000efe:	2330      	movs	r3, #48	; 0x30
 8000f00:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80010c4 <_vfiprintf_r+0x24c>
 8000f04:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f08:	f04f 0901 	mov.w	r9, #1
 8000f0c:	4623      	mov	r3, r4
 8000f0e:	469a      	mov	sl, r3
 8000f10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f14:	b10a      	cbz	r2, 8000f1a <_vfiprintf_r+0xa2>
 8000f16:	2a25      	cmp	r2, #37	; 0x25
 8000f18:	d1f9      	bne.n	8000f0e <_vfiprintf_r+0x96>
 8000f1a:	ebba 0b04 	subs.w	fp, sl, r4
 8000f1e:	d00b      	beq.n	8000f38 <_vfiprintf_r+0xc0>
 8000f20:	465b      	mov	r3, fp
 8000f22:	4622      	mov	r2, r4
 8000f24:	4629      	mov	r1, r5
 8000f26:	4630      	mov	r0, r6
 8000f28:	f7ff ff93 	bl	8000e52 <__sfputs_r>
 8000f2c:	3001      	adds	r0, #1
 8000f2e:	f000 80aa 	beq.w	8001086 <_vfiprintf_r+0x20e>
 8000f32:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f34:	445a      	add	r2, fp
 8000f36:	9209      	str	r2, [sp, #36]	; 0x24
 8000f38:	f89a 3000 	ldrb.w	r3, [sl]
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	f000 80a2 	beq.w	8001086 <_vfiprintf_r+0x20e>
 8000f42:	2300      	movs	r3, #0
 8000f44:	f04f 32ff 	mov.w	r2, #4294967295
 8000f48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f4c:	f10a 0a01 	add.w	sl, sl, #1
 8000f50:	9304      	str	r3, [sp, #16]
 8000f52:	9307      	str	r3, [sp, #28]
 8000f54:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f58:	931a      	str	r3, [sp, #104]	; 0x68
 8000f5a:	4654      	mov	r4, sl
 8000f5c:	2205      	movs	r2, #5
 8000f5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f62:	4858      	ldr	r0, [pc, #352]	; (80010c4 <_vfiprintf_r+0x24c>)
 8000f64:	f7ff f944 	bl	80001f0 <memchr>
 8000f68:	9a04      	ldr	r2, [sp, #16]
 8000f6a:	b9d8      	cbnz	r0, 8000fa4 <_vfiprintf_r+0x12c>
 8000f6c:	06d1      	lsls	r1, r2, #27
 8000f6e:	bf44      	itt	mi
 8000f70:	2320      	movmi	r3, #32
 8000f72:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f76:	0713      	lsls	r3, r2, #28
 8000f78:	bf44      	itt	mi
 8000f7a:	232b      	movmi	r3, #43	; 0x2b
 8000f7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f80:	f89a 3000 	ldrb.w	r3, [sl]
 8000f84:	2b2a      	cmp	r3, #42	; 0x2a
 8000f86:	d015      	beq.n	8000fb4 <_vfiprintf_r+0x13c>
 8000f88:	9a07      	ldr	r2, [sp, #28]
 8000f8a:	4654      	mov	r4, sl
 8000f8c:	2000      	movs	r0, #0
 8000f8e:	f04f 0c0a 	mov.w	ip, #10
 8000f92:	4621      	mov	r1, r4
 8000f94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f98:	3b30      	subs	r3, #48	; 0x30
 8000f9a:	2b09      	cmp	r3, #9
 8000f9c:	d94e      	bls.n	800103c <_vfiprintf_r+0x1c4>
 8000f9e:	b1b0      	cbz	r0, 8000fce <_vfiprintf_r+0x156>
 8000fa0:	9207      	str	r2, [sp, #28]
 8000fa2:	e014      	b.n	8000fce <_vfiprintf_r+0x156>
 8000fa4:	eba0 0308 	sub.w	r3, r0, r8
 8000fa8:	fa09 f303 	lsl.w	r3, r9, r3
 8000fac:	4313      	orrs	r3, r2
 8000fae:	9304      	str	r3, [sp, #16]
 8000fb0:	46a2      	mov	sl, r4
 8000fb2:	e7d2      	b.n	8000f5a <_vfiprintf_r+0xe2>
 8000fb4:	9b03      	ldr	r3, [sp, #12]
 8000fb6:	1d19      	adds	r1, r3, #4
 8000fb8:	681b      	ldr	r3, [r3, #0]
 8000fba:	9103      	str	r1, [sp, #12]
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	bfbb      	ittet	lt
 8000fc0:	425b      	neglt	r3, r3
 8000fc2:	f042 0202 	orrlt.w	r2, r2, #2
 8000fc6:	9307      	strge	r3, [sp, #28]
 8000fc8:	9307      	strlt	r3, [sp, #28]
 8000fca:	bfb8      	it	lt
 8000fcc:	9204      	strlt	r2, [sp, #16]
 8000fce:	7823      	ldrb	r3, [r4, #0]
 8000fd0:	2b2e      	cmp	r3, #46	; 0x2e
 8000fd2:	d10c      	bne.n	8000fee <_vfiprintf_r+0x176>
 8000fd4:	7863      	ldrb	r3, [r4, #1]
 8000fd6:	2b2a      	cmp	r3, #42	; 0x2a
 8000fd8:	d135      	bne.n	8001046 <_vfiprintf_r+0x1ce>
 8000fda:	9b03      	ldr	r3, [sp, #12]
 8000fdc:	1d1a      	adds	r2, r3, #4
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	9203      	str	r2, [sp, #12]
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	bfb8      	it	lt
 8000fe6:	f04f 33ff 	movlt.w	r3, #4294967295
 8000fea:	3402      	adds	r4, #2
 8000fec:	9305      	str	r3, [sp, #20]
 8000fee:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80010d4 <_vfiprintf_r+0x25c>
 8000ff2:	7821      	ldrb	r1, [r4, #0]
 8000ff4:	2203      	movs	r2, #3
 8000ff6:	4650      	mov	r0, sl
 8000ff8:	f7ff f8fa 	bl	80001f0 <memchr>
 8000ffc:	b140      	cbz	r0, 8001010 <_vfiprintf_r+0x198>
 8000ffe:	2340      	movs	r3, #64	; 0x40
 8001000:	eba0 000a 	sub.w	r0, r0, sl
 8001004:	fa03 f000 	lsl.w	r0, r3, r0
 8001008:	9b04      	ldr	r3, [sp, #16]
 800100a:	4303      	orrs	r3, r0
 800100c:	3401      	adds	r4, #1
 800100e:	9304      	str	r3, [sp, #16]
 8001010:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001014:	482c      	ldr	r0, [pc, #176]	; (80010c8 <_vfiprintf_r+0x250>)
 8001016:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800101a:	2206      	movs	r2, #6
 800101c:	f7ff f8e8 	bl	80001f0 <memchr>
 8001020:	2800      	cmp	r0, #0
 8001022:	d03f      	beq.n	80010a4 <_vfiprintf_r+0x22c>
 8001024:	4b29      	ldr	r3, [pc, #164]	; (80010cc <_vfiprintf_r+0x254>)
 8001026:	bb1b      	cbnz	r3, 8001070 <_vfiprintf_r+0x1f8>
 8001028:	9b03      	ldr	r3, [sp, #12]
 800102a:	3307      	adds	r3, #7
 800102c:	f023 0307 	bic.w	r3, r3, #7
 8001030:	3308      	adds	r3, #8
 8001032:	9303      	str	r3, [sp, #12]
 8001034:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001036:	443b      	add	r3, r7
 8001038:	9309      	str	r3, [sp, #36]	; 0x24
 800103a:	e767      	b.n	8000f0c <_vfiprintf_r+0x94>
 800103c:	fb0c 3202 	mla	r2, ip, r2, r3
 8001040:	460c      	mov	r4, r1
 8001042:	2001      	movs	r0, #1
 8001044:	e7a5      	b.n	8000f92 <_vfiprintf_r+0x11a>
 8001046:	2300      	movs	r3, #0
 8001048:	3401      	adds	r4, #1
 800104a:	9305      	str	r3, [sp, #20]
 800104c:	4619      	mov	r1, r3
 800104e:	f04f 0c0a 	mov.w	ip, #10
 8001052:	4620      	mov	r0, r4
 8001054:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001058:	3a30      	subs	r2, #48	; 0x30
 800105a:	2a09      	cmp	r2, #9
 800105c:	d903      	bls.n	8001066 <_vfiprintf_r+0x1ee>
 800105e:	2b00      	cmp	r3, #0
 8001060:	d0c5      	beq.n	8000fee <_vfiprintf_r+0x176>
 8001062:	9105      	str	r1, [sp, #20]
 8001064:	e7c3      	b.n	8000fee <_vfiprintf_r+0x176>
 8001066:	fb0c 2101 	mla	r1, ip, r1, r2
 800106a:	4604      	mov	r4, r0
 800106c:	2301      	movs	r3, #1
 800106e:	e7f0      	b.n	8001052 <_vfiprintf_r+0x1da>
 8001070:	ab03      	add	r3, sp, #12
 8001072:	9300      	str	r3, [sp, #0]
 8001074:	462a      	mov	r2, r5
 8001076:	4b16      	ldr	r3, [pc, #88]	; (80010d0 <_vfiprintf_r+0x258>)
 8001078:	a904      	add	r1, sp, #16
 800107a:	4630      	mov	r0, r6
 800107c:	f3af 8000 	nop.w
 8001080:	4607      	mov	r7, r0
 8001082:	1c78      	adds	r0, r7, #1
 8001084:	d1d6      	bne.n	8001034 <_vfiprintf_r+0x1bc>
 8001086:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001088:	07d9      	lsls	r1, r3, #31
 800108a:	d405      	bmi.n	8001098 <_vfiprintf_r+0x220>
 800108c:	89ab      	ldrh	r3, [r5, #12]
 800108e:	059a      	lsls	r2, r3, #22
 8001090:	d402      	bmi.n	8001098 <_vfiprintf_r+0x220>
 8001092:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001094:	f7ff fdbb 	bl	8000c0e <__retarget_lock_release_recursive>
 8001098:	89ab      	ldrh	r3, [r5, #12]
 800109a:	065b      	lsls	r3, r3, #25
 800109c:	f53f af12 	bmi.w	8000ec4 <_vfiprintf_r+0x4c>
 80010a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80010a2:	e711      	b.n	8000ec8 <_vfiprintf_r+0x50>
 80010a4:	ab03      	add	r3, sp, #12
 80010a6:	9300      	str	r3, [sp, #0]
 80010a8:	462a      	mov	r2, r5
 80010aa:	4b09      	ldr	r3, [pc, #36]	; (80010d0 <_vfiprintf_r+0x258>)
 80010ac:	a904      	add	r1, sp, #16
 80010ae:	4630      	mov	r0, r6
 80010b0:	f000 f880 	bl	80011b4 <_printf_i>
 80010b4:	e7e4      	b.n	8001080 <_vfiprintf_r+0x208>
 80010b6:	bf00      	nop
 80010b8:	08001640 	.word	0x08001640
 80010bc:	08001660 	.word	0x08001660
 80010c0:	08001620 	.word	0x08001620
 80010c4:	08001680 	.word	0x08001680
 80010c8:	0800168a 	.word	0x0800168a
 80010cc:	00000000 	.word	0x00000000
 80010d0:	08000e53 	.word	0x08000e53
 80010d4:	08001686 	.word	0x08001686

080010d8 <_printf_common>:
 80010d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010dc:	4616      	mov	r6, r2
 80010de:	4699      	mov	r9, r3
 80010e0:	688a      	ldr	r2, [r1, #8]
 80010e2:	690b      	ldr	r3, [r1, #16]
 80010e4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80010e8:	4293      	cmp	r3, r2
 80010ea:	bfb8      	it	lt
 80010ec:	4613      	movlt	r3, r2
 80010ee:	6033      	str	r3, [r6, #0]
 80010f0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80010f4:	4607      	mov	r7, r0
 80010f6:	460c      	mov	r4, r1
 80010f8:	b10a      	cbz	r2, 80010fe <_printf_common+0x26>
 80010fa:	3301      	adds	r3, #1
 80010fc:	6033      	str	r3, [r6, #0]
 80010fe:	6823      	ldr	r3, [r4, #0]
 8001100:	0699      	lsls	r1, r3, #26
 8001102:	bf42      	ittt	mi
 8001104:	6833      	ldrmi	r3, [r6, #0]
 8001106:	3302      	addmi	r3, #2
 8001108:	6033      	strmi	r3, [r6, #0]
 800110a:	6825      	ldr	r5, [r4, #0]
 800110c:	f015 0506 	ands.w	r5, r5, #6
 8001110:	d106      	bne.n	8001120 <_printf_common+0x48>
 8001112:	f104 0a19 	add.w	sl, r4, #25
 8001116:	68e3      	ldr	r3, [r4, #12]
 8001118:	6832      	ldr	r2, [r6, #0]
 800111a:	1a9b      	subs	r3, r3, r2
 800111c:	42ab      	cmp	r3, r5
 800111e:	dc26      	bgt.n	800116e <_printf_common+0x96>
 8001120:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001124:	1e13      	subs	r3, r2, #0
 8001126:	6822      	ldr	r2, [r4, #0]
 8001128:	bf18      	it	ne
 800112a:	2301      	movne	r3, #1
 800112c:	0692      	lsls	r2, r2, #26
 800112e:	d42b      	bmi.n	8001188 <_printf_common+0xb0>
 8001130:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001134:	4649      	mov	r1, r9
 8001136:	4638      	mov	r0, r7
 8001138:	47c0      	blx	r8
 800113a:	3001      	adds	r0, #1
 800113c:	d01e      	beq.n	800117c <_printf_common+0xa4>
 800113e:	6823      	ldr	r3, [r4, #0]
 8001140:	68e5      	ldr	r5, [r4, #12]
 8001142:	6832      	ldr	r2, [r6, #0]
 8001144:	f003 0306 	and.w	r3, r3, #6
 8001148:	2b04      	cmp	r3, #4
 800114a:	bf08      	it	eq
 800114c:	1aad      	subeq	r5, r5, r2
 800114e:	68a3      	ldr	r3, [r4, #8]
 8001150:	6922      	ldr	r2, [r4, #16]
 8001152:	bf0c      	ite	eq
 8001154:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001158:	2500      	movne	r5, #0
 800115a:	4293      	cmp	r3, r2
 800115c:	bfc4      	itt	gt
 800115e:	1a9b      	subgt	r3, r3, r2
 8001160:	18ed      	addgt	r5, r5, r3
 8001162:	2600      	movs	r6, #0
 8001164:	341a      	adds	r4, #26
 8001166:	42b5      	cmp	r5, r6
 8001168:	d11a      	bne.n	80011a0 <_printf_common+0xc8>
 800116a:	2000      	movs	r0, #0
 800116c:	e008      	b.n	8001180 <_printf_common+0xa8>
 800116e:	2301      	movs	r3, #1
 8001170:	4652      	mov	r2, sl
 8001172:	4649      	mov	r1, r9
 8001174:	4638      	mov	r0, r7
 8001176:	47c0      	blx	r8
 8001178:	3001      	adds	r0, #1
 800117a:	d103      	bne.n	8001184 <_printf_common+0xac>
 800117c:	f04f 30ff 	mov.w	r0, #4294967295
 8001180:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001184:	3501      	adds	r5, #1
 8001186:	e7c6      	b.n	8001116 <_printf_common+0x3e>
 8001188:	18e1      	adds	r1, r4, r3
 800118a:	1c5a      	adds	r2, r3, #1
 800118c:	2030      	movs	r0, #48	; 0x30
 800118e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001192:	4422      	add	r2, r4
 8001194:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001198:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800119c:	3302      	adds	r3, #2
 800119e:	e7c7      	b.n	8001130 <_printf_common+0x58>
 80011a0:	2301      	movs	r3, #1
 80011a2:	4622      	mov	r2, r4
 80011a4:	4649      	mov	r1, r9
 80011a6:	4638      	mov	r0, r7
 80011a8:	47c0      	blx	r8
 80011aa:	3001      	adds	r0, #1
 80011ac:	d0e6      	beq.n	800117c <_printf_common+0xa4>
 80011ae:	3601      	adds	r6, #1
 80011b0:	e7d9      	b.n	8001166 <_printf_common+0x8e>
	...

080011b4 <_printf_i>:
 80011b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011b8:	460c      	mov	r4, r1
 80011ba:	4691      	mov	r9, r2
 80011bc:	7e27      	ldrb	r7, [r4, #24]
 80011be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80011c0:	2f78      	cmp	r7, #120	; 0x78
 80011c2:	4680      	mov	r8, r0
 80011c4:	469a      	mov	sl, r3
 80011c6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011ca:	d807      	bhi.n	80011dc <_printf_i+0x28>
 80011cc:	2f62      	cmp	r7, #98	; 0x62
 80011ce:	d80a      	bhi.n	80011e6 <_printf_i+0x32>
 80011d0:	2f00      	cmp	r7, #0
 80011d2:	f000 80d8 	beq.w	8001386 <_printf_i+0x1d2>
 80011d6:	2f58      	cmp	r7, #88	; 0x58
 80011d8:	f000 80a3 	beq.w	8001322 <_printf_i+0x16e>
 80011dc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80011e0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80011e4:	e03a      	b.n	800125c <_printf_i+0xa8>
 80011e6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80011ea:	2b15      	cmp	r3, #21
 80011ec:	d8f6      	bhi.n	80011dc <_printf_i+0x28>
 80011ee:	a001      	add	r0, pc, #4	; (adr r0, 80011f4 <_printf_i+0x40>)
 80011f0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80011f4:	0800124d 	.word	0x0800124d
 80011f8:	08001261 	.word	0x08001261
 80011fc:	080011dd 	.word	0x080011dd
 8001200:	080011dd 	.word	0x080011dd
 8001204:	080011dd 	.word	0x080011dd
 8001208:	080011dd 	.word	0x080011dd
 800120c:	08001261 	.word	0x08001261
 8001210:	080011dd 	.word	0x080011dd
 8001214:	080011dd 	.word	0x080011dd
 8001218:	080011dd 	.word	0x080011dd
 800121c:	080011dd 	.word	0x080011dd
 8001220:	0800136d 	.word	0x0800136d
 8001224:	08001291 	.word	0x08001291
 8001228:	0800134f 	.word	0x0800134f
 800122c:	080011dd 	.word	0x080011dd
 8001230:	080011dd 	.word	0x080011dd
 8001234:	0800138f 	.word	0x0800138f
 8001238:	080011dd 	.word	0x080011dd
 800123c:	08001291 	.word	0x08001291
 8001240:	080011dd 	.word	0x080011dd
 8001244:	080011dd 	.word	0x080011dd
 8001248:	08001357 	.word	0x08001357
 800124c:	680b      	ldr	r3, [r1, #0]
 800124e:	1d1a      	adds	r2, r3, #4
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	600a      	str	r2, [r1, #0]
 8001254:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001258:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800125c:	2301      	movs	r3, #1
 800125e:	e0a3      	b.n	80013a8 <_printf_i+0x1f4>
 8001260:	6825      	ldr	r5, [r4, #0]
 8001262:	6808      	ldr	r0, [r1, #0]
 8001264:	062e      	lsls	r6, r5, #24
 8001266:	f100 0304 	add.w	r3, r0, #4
 800126a:	d50a      	bpl.n	8001282 <_printf_i+0xce>
 800126c:	6805      	ldr	r5, [r0, #0]
 800126e:	600b      	str	r3, [r1, #0]
 8001270:	2d00      	cmp	r5, #0
 8001272:	da03      	bge.n	800127c <_printf_i+0xc8>
 8001274:	232d      	movs	r3, #45	; 0x2d
 8001276:	426d      	negs	r5, r5
 8001278:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800127c:	485e      	ldr	r0, [pc, #376]	; (80013f8 <_printf_i+0x244>)
 800127e:	230a      	movs	r3, #10
 8001280:	e019      	b.n	80012b6 <_printf_i+0x102>
 8001282:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001286:	6805      	ldr	r5, [r0, #0]
 8001288:	600b      	str	r3, [r1, #0]
 800128a:	bf18      	it	ne
 800128c:	b22d      	sxthne	r5, r5
 800128e:	e7ef      	b.n	8001270 <_printf_i+0xbc>
 8001290:	680b      	ldr	r3, [r1, #0]
 8001292:	6825      	ldr	r5, [r4, #0]
 8001294:	1d18      	adds	r0, r3, #4
 8001296:	6008      	str	r0, [r1, #0]
 8001298:	0628      	lsls	r0, r5, #24
 800129a:	d501      	bpl.n	80012a0 <_printf_i+0xec>
 800129c:	681d      	ldr	r5, [r3, #0]
 800129e:	e002      	b.n	80012a6 <_printf_i+0xf2>
 80012a0:	0669      	lsls	r1, r5, #25
 80012a2:	d5fb      	bpl.n	800129c <_printf_i+0xe8>
 80012a4:	881d      	ldrh	r5, [r3, #0]
 80012a6:	4854      	ldr	r0, [pc, #336]	; (80013f8 <_printf_i+0x244>)
 80012a8:	2f6f      	cmp	r7, #111	; 0x6f
 80012aa:	bf0c      	ite	eq
 80012ac:	2308      	moveq	r3, #8
 80012ae:	230a      	movne	r3, #10
 80012b0:	2100      	movs	r1, #0
 80012b2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012b6:	6866      	ldr	r6, [r4, #4]
 80012b8:	60a6      	str	r6, [r4, #8]
 80012ba:	2e00      	cmp	r6, #0
 80012bc:	bfa2      	ittt	ge
 80012be:	6821      	ldrge	r1, [r4, #0]
 80012c0:	f021 0104 	bicge.w	r1, r1, #4
 80012c4:	6021      	strge	r1, [r4, #0]
 80012c6:	b90d      	cbnz	r5, 80012cc <_printf_i+0x118>
 80012c8:	2e00      	cmp	r6, #0
 80012ca:	d04d      	beq.n	8001368 <_printf_i+0x1b4>
 80012cc:	4616      	mov	r6, r2
 80012ce:	fbb5 f1f3 	udiv	r1, r5, r3
 80012d2:	fb03 5711 	mls	r7, r3, r1, r5
 80012d6:	5dc7      	ldrb	r7, [r0, r7]
 80012d8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80012dc:	462f      	mov	r7, r5
 80012de:	42bb      	cmp	r3, r7
 80012e0:	460d      	mov	r5, r1
 80012e2:	d9f4      	bls.n	80012ce <_printf_i+0x11a>
 80012e4:	2b08      	cmp	r3, #8
 80012e6:	d10b      	bne.n	8001300 <_printf_i+0x14c>
 80012e8:	6823      	ldr	r3, [r4, #0]
 80012ea:	07df      	lsls	r7, r3, #31
 80012ec:	d508      	bpl.n	8001300 <_printf_i+0x14c>
 80012ee:	6923      	ldr	r3, [r4, #16]
 80012f0:	6861      	ldr	r1, [r4, #4]
 80012f2:	4299      	cmp	r1, r3
 80012f4:	bfde      	ittt	le
 80012f6:	2330      	movle	r3, #48	; 0x30
 80012f8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80012fc:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001300:	1b92      	subs	r2, r2, r6
 8001302:	6122      	str	r2, [r4, #16]
 8001304:	f8cd a000 	str.w	sl, [sp]
 8001308:	464b      	mov	r3, r9
 800130a:	aa03      	add	r2, sp, #12
 800130c:	4621      	mov	r1, r4
 800130e:	4640      	mov	r0, r8
 8001310:	f7ff fee2 	bl	80010d8 <_printf_common>
 8001314:	3001      	adds	r0, #1
 8001316:	d14c      	bne.n	80013b2 <_printf_i+0x1fe>
 8001318:	f04f 30ff 	mov.w	r0, #4294967295
 800131c:	b004      	add	sp, #16
 800131e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001322:	4835      	ldr	r0, [pc, #212]	; (80013f8 <_printf_i+0x244>)
 8001324:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	680e      	ldr	r6, [r1, #0]
 800132c:	061f      	lsls	r7, r3, #24
 800132e:	f856 5b04 	ldr.w	r5, [r6], #4
 8001332:	600e      	str	r6, [r1, #0]
 8001334:	d514      	bpl.n	8001360 <_printf_i+0x1ac>
 8001336:	07d9      	lsls	r1, r3, #31
 8001338:	bf44      	itt	mi
 800133a:	f043 0320 	orrmi.w	r3, r3, #32
 800133e:	6023      	strmi	r3, [r4, #0]
 8001340:	b91d      	cbnz	r5, 800134a <_printf_i+0x196>
 8001342:	6823      	ldr	r3, [r4, #0]
 8001344:	f023 0320 	bic.w	r3, r3, #32
 8001348:	6023      	str	r3, [r4, #0]
 800134a:	2310      	movs	r3, #16
 800134c:	e7b0      	b.n	80012b0 <_printf_i+0xfc>
 800134e:	6823      	ldr	r3, [r4, #0]
 8001350:	f043 0320 	orr.w	r3, r3, #32
 8001354:	6023      	str	r3, [r4, #0]
 8001356:	2378      	movs	r3, #120	; 0x78
 8001358:	4828      	ldr	r0, [pc, #160]	; (80013fc <_printf_i+0x248>)
 800135a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800135e:	e7e3      	b.n	8001328 <_printf_i+0x174>
 8001360:	065e      	lsls	r6, r3, #25
 8001362:	bf48      	it	mi
 8001364:	b2ad      	uxthmi	r5, r5
 8001366:	e7e6      	b.n	8001336 <_printf_i+0x182>
 8001368:	4616      	mov	r6, r2
 800136a:	e7bb      	b.n	80012e4 <_printf_i+0x130>
 800136c:	680b      	ldr	r3, [r1, #0]
 800136e:	6826      	ldr	r6, [r4, #0]
 8001370:	6960      	ldr	r0, [r4, #20]
 8001372:	1d1d      	adds	r5, r3, #4
 8001374:	600d      	str	r5, [r1, #0]
 8001376:	0635      	lsls	r5, r6, #24
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	d501      	bpl.n	8001380 <_printf_i+0x1cc>
 800137c:	6018      	str	r0, [r3, #0]
 800137e:	e002      	b.n	8001386 <_printf_i+0x1d2>
 8001380:	0671      	lsls	r1, r6, #25
 8001382:	d5fb      	bpl.n	800137c <_printf_i+0x1c8>
 8001384:	8018      	strh	r0, [r3, #0]
 8001386:	2300      	movs	r3, #0
 8001388:	6123      	str	r3, [r4, #16]
 800138a:	4616      	mov	r6, r2
 800138c:	e7ba      	b.n	8001304 <_printf_i+0x150>
 800138e:	680b      	ldr	r3, [r1, #0]
 8001390:	1d1a      	adds	r2, r3, #4
 8001392:	600a      	str	r2, [r1, #0]
 8001394:	681e      	ldr	r6, [r3, #0]
 8001396:	6862      	ldr	r2, [r4, #4]
 8001398:	2100      	movs	r1, #0
 800139a:	4630      	mov	r0, r6
 800139c:	f7fe ff28 	bl	80001f0 <memchr>
 80013a0:	b108      	cbz	r0, 80013a6 <_printf_i+0x1f2>
 80013a2:	1b80      	subs	r0, r0, r6
 80013a4:	6060      	str	r0, [r4, #4]
 80013a6:	6863      	ldr	r3, [r4, #4]
 80013a8:	6123      	str	r3, [r4, #16]
 80013aa:	2300      	movs	r3, #0
 80013ac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013b0:	e7a8      	b.n	8001304 <_printf_i+0x150>
 80013b2:	6923      	ldr	r3, [r4, #16]
 80013b4:	4632      	mov	r2, r6
 80013b6:	4649      	mov	r1, r9
 80013b8:	4640      	mov	r0, r8
 80013ba:	47d0      	blx	sl
 80013bc:	3001      	adds	r0, #1
 80013be:	d0ab      	beq.n	8001318 <_printf_i+0x164>
 80013c0:	6823      	ldr	r3, [r4, #0]
 80013c2:	079b      	lsls	r3, r3, #30
 80013c4:	d413      	bmi.n	80013ee <_printf_i+0x23a>
 80013c6:	68e0      	ldr	r0, [r4, #12]
 80013c8:	9b03      	ldr	r3, [sp, #12]
 80013ca:	4298      	cmp	r0, r3
 80013cc:	bfb8      	it	lt
 80013ce:	4618      	movlt	r0, r3
 80013d0:	e7a4      	b.n	800131c <_printf_i+0x168>
 80013d2:	2301      	movs	r3, #1
 80013d4:	4632      	mov	r2, r6
 80013d6:	4649      	mov	r1, r9
 80013d8:	4640      	mov	r0, r8
 80013da:	47d0      	blx	sl
 80013dc:	3001      	adds	r0, #1
 80013de:	d09b      	beq.n	8001318 <_printf_i+0x164>
 80013e0:	3501      	adds	r5, #1
 80013e2:	68e3      	ldr	r3, [r4, #12]
 80013e4:	9903      	ldr	r1, [sp, #12]
 80013e6:	1a5b      	subs	r3, r3, r1
 80013e8:	42ab      	cmp	r3, r5
 80013ea:	dcf2      	bgt.n	80013d2 <_printf_i+0x21e>
 80013ec:	e7eb      	b.n	80013c6 <_printf_i+0x212>
 80013ee:	2500      	movs	r5, #0
 80013f0:	f104 0619 	add.w	r6, r4, #25
 80013f4:	e7f5      	b.n	80013e2 <_printf_i+0x22e>
 80013f6:	bf00      	nop
 80013f8:	08001691 	.word	0x08001691
 80013fc:	080016a2 	.word	0x080016a2

08001400 <_sbrk_r>:
 8001400:	b538      	push	{r3, r4, r5, lr}
 8001402:	4d06      	ldr	r5, [pc, #24]	; (800141c <_sbrk_r+0x1c>)
 8001404:	2300      	movs	r3, #0
 8001406:	4604      	mov	r4, r0
 8001408:	4608      	mov	r0, r1
 800140a:	602b      	str	r3, [r5, #0]
 800140c:	f7ff f866 	bl	80004dc <_sbrk>
 8001410:	1c43      	adds	r3, r0, #1
 8001412:	d102      	bne.n	800141a <_sbrk_r+0x1a>
 8001414:	682b      	ldr	r3, [r5, #0]
 8001416:	b103      	cbz	r3, 800141a <_sbrk_r+0x1a>
 8001418:	6023      	str	r3, [r4, #0]
 800141a:	bd38      	pop	{r3, r4, r5, pc}
 800141c:	20000098 	.word	0x20000098

08001420 <__sread>:
 8001420:	b510      	push	{r4, lr}
 8001422:	460c      	mov	r4, r1
 8001424:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001428:	f000 f8a0 	bl	800156c <_read_r>
 800142c:	2800      	cmp	r0, #0
 800142e:	bfab      	itete	ge
 8001430:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001432:	89a3      	ldrhlt	r3, [r4, #12]
 8001434:	181b      	addge	r3, r3, r0
 8001436:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800143a:	bfac      	ite	ge
 800143c:	6563      	strge	r3, [r4, #84]	; 0x54
 800143e:	81a3      	strhlt	r3, [r4, #12]
 8001440:	bd10      	pop	{r4, pc}

08001442 <__swrite>:
 8001442:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001446:	461f      	mov	r7, r3
 8001448:	898b      	ldrh	r3, [r1, #12]
 800144a:	05db      	lsls	r3, r3, #23
 800144c:	4605      	mov	r5, r0
 800144e:	460c      	mov	r4, r1
 8001450:	4616      	mov	r6, r2
 8001452:	d505      	bpl.n	8001460 <__swrite+0x1e>
 8001454:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001458:	2302      	movs	r3, #2
 800145a:	2200      	movs	r2, #0
 800145c:	f000 f868 	bl	8001530 <_lseek_r>
 8001460:	89a3      	ldrh	r3, [r4, #12]
 8001462:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001466:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800146a:	81a3      	strh	r3, [r4, #12]
 800146c:	4632      	mov	r2, r6
 800146e:	463b      	mov	r3, r7
 8001470:	4628      	mov	r0, r5
 8001472:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001476:	f000 b817 	b.w	80014a8 <_write_r>

0800147a <__sseek>:
 800147a:	b510      	push	{r4, lr}
 800147c:	460c      	mov	r4, r1
 800147e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001482:	f000 f855 	bl	8001530 <_lseek_r>
 8001486:	1c43      	adds	r3, r0, #1
 8001488:	89a3      	ldrh	r3, [r4, #12]
 800148a:	bf15      	itete	ne
 800148c:	6560      	strne	r0, [r4, #84]	; 0x54
 800148e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001492:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001496:	81a3      	strheq	r3, [r4, #12]
 8001498:	bf18      	it	ne
 800149a:	81a3      	strhne	r3, [r4, #12]
 800149c:	bd10      	pop	{r4, pc}

0800149e <__sclose>:
 800149e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014a2:	f000 b813 	b.w	80014cc <_close_r>
	...

080014a8 <_write_r>:
 80014a8:	b538      	push	{r3, r4, r5, lr}
 80014aa:	4d07      	ldr	r5, [pc, #28]	; (80014c8 <_write_r+0x20>)
 80014ac:	4604      	mov	r4, r0
 80014ae:	4608      	mov	r0, r1
 80014b0:	4611      	mov	r1, r2
 80014b2:	2200      	movs	r2, #0
 80014b4:	602a      	str	r2, [r5, #0]
 80014b6:	461a      	mov	r2, r3
 80014b8:	f7fe ffc3 	bl	8000442 <_write>
 80014bc:	1c43      	adds	r3, r0, #1
 80014be:	d102      	bne.n	80014c6 <_write_r+0x1e>
 80014c0:	682b      	ldr	r3, [r5, #0]
 80014c2:	b103      	cbz	r3, 80014c6 <_write_r+0x1e>
 80014c4:	6023      	str	r3, [r4, #0]
 80014c6:	bd38      	pop	{r3, r4, r5, pc}
 80014c8:	20000098 	.word	0x20000098

080014cc <_close_r>:
 80014cc:	b538      	push	{r3, r4, r5, lr}
 80014ce:	4d06      	ldr	r5, [pc, #24]	; (80014e8 <_close_r+0x1c>)
 80014d0:	2300      	movs	r3, #0
 80014d2:	4604      	mov	r4, r0
 80014d4:	4608      	mov	r0, r1
 80014d6:	602b      	str	r3, [r5, #0]
 80014d8:	f7fe ffcf 	bl	800047a <_close>
 80014dc:	1c43      	adds	r3, r0, #1
 80014de:	d102      	bne.n	80014e6 <_close_r+0x1a>
 80014e0:	682b      	ldr	r3, [r5, #0]
 80014e2:	b103      	cbz	r3, 80014e6 <_close_r+0x1a>
 80014e4:	6023      	str	r3, [r4, #0]
 80014e6:	bd38      	pop	{r3, r4, r5, pc}
 80014e8:	20000098 	.word	0x20000098

080014ec <_fstat_r>:
 80014ec:	b538      	push	{r3, r4, r5, lr}
 80014ee:	4d07      	ldr	r5, [pc, #28]	; (800150c <_fstat_r+0x20>)
 80014f0:	2300      	movs	r3, #0
 80014f2:	4604      	mov	r4, r0
 80014f4:	4608      	mov	r0, r1
 80014f6:	4611      	mov	r1, r2
 80014f8:	602b      	str	r3, [r5, #0]
 80014fa:	f7fe ffc9 	bl	8000490 <_fstat>
 80014fe:	1c43      	adds	r3, r0, #1
 8001500:	d102      	bne.n	8001508 <_fstat_r+0x1c>
 8001502:	682b      	ldr	r3, [r5, #0]
 8001504:	b103      	cbz	r3, 8001508 <_fstat_r+0x1c>
 8001506:	6023      	str	r3, [r4, #0]
 8001508:	bd38      	pop	{r3, r4, r5, pc}
 800150a:	bf00      	nop
 800150c:	20000098 	.word	0x20000098

08001510 <_isatty_r>:
 8001510:	b538      	push	{r3, r4, r5, lr}
 8001512:	4d06      	ldr	r5, [pc, #24]	; (800152c <_isatty_r+0x1c>)
 8001514:	2300      	movs	r3, #0
 8001516:	4604      	mov	r4, r0
 8001518:	4608      	mov	r0, r1
 800151a:	602b      	str	r3, [r5, #0]
 800151c:	f7fe ffc7 	bl	80004ae <_isatty>
 8001520:	1c43      	adds	r3, r0, #1
 8001522:	d102      	bne.n	800152a <_isatty_r+0x1a>
 8001524:	682b      	ldr	r3, [r5, #0]
 8001526:	b103      	cbz	r3, 800152a <_isatty_r+0x1a>
 8001528:	6023      	str	r3, [r4, #0]
 800152a:	bd38      	pop	{r3, r4, r5, pc}
 800152c:	20000098 	.word	0x20000098

08001530 <_lseek_r>:
 8001530:	b538      	push	{r3, r4, r5, lr}
 8001532:	4d07      	ldr	r5, [pc, #28]	; (8001550 <_lseek_r+0x20>)
 8001534:	4604      	mov	r4, r0
 8001536:	4608      	mov	r0, r1
 8001538:	4611      	mov	r1, r2
 800153a:	2200      	movs	r2, #0
 800153c:	602a      	str	r2, [r5, #0]
 800153e:	461a      	mov	r2, r3
 8001540:	f7fe ffbf 	bl	80004c2 <_lseek>
 8001544:	1c43      	adds	r3, r0, #1
 8001546:	d102      	bne.n	800154e <_lseek_r+0x1e>
 8001548:	682b      	ldr	r3, [r5, #0]
 800154a:	b103      	cbz	r3, 800154e <_lseek_r+0x1e>
 800154c:	6023      	str	r3, [r4, #0]
 800154e:	bd38      	pop	{r3, r4, r5, pc}
 8001550:	20000098 	.word	0x20000098

08001554 <__malloc_lock>:
 8001554:	4801      	ldr	r0, [pc, #4]	; (800155c <__malloc_lock+0x8>)
 8001556:	f7ff bb59 	b.w	8000c0c <__retarget_lock_acquire_recursive>
 800155a:	bf00      	nop
 800155c:	20000090 	.word	0x20000090

08001560 <__malloc_unlock>:
 8001560:	4801      	ldr	r0, [pc, #4]	; (8001568 <__malloc_unlock+0x8>)
 8001562:	f7ff bb54 	b.w	8000c0e <__retarget_lock_release_recursive>
 8001566:	bf00      	nop
 8001568:	20000090 	.word	0x20000090

0800156c <_read_r>:
 800156c:	b538      	push	{r3, r4, r5, lr}
 800156e:	4d07      	ldr	r5, [pc, #28]	; (800158c <_read_r+0x20>)
 8001570:	4604      	mov	r4, r0
 8001572:	4608      	mov	r0, r1
 8001574:	4611      	mov	r1, r2
 8001576:	2200      	movs	r2, #0
 8001578:	602a      	str	r2, [r5, #0]
 800157a:	461a      	mov	r2, r3
 800157c:	f7fe ff44 	bl	8000408 <_read>
 8001580:	1c43      	adds	r3, r0, #1
 8001582:	d102      	bne.n	800158a <_read_r+0x1e>
 8001584:	682b      	ldr	r3, [r5, #0]
 8001586:	b103      	cbz	r3, 800158a <_read_r+0x1e>
 8001588:	6023      	str	r3, [r4, #0]
 800158a:	bd38      	pop	{r3, r4, r5, pc}
 800158c:	20000098 	.word	0x20000098

08001590 <_init>:
 8001590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001592:	bf00      	nop
 8001594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001596:	bc08      	pop	{r3}
 8001598:	469e      	mov	lr, r3
 800159a:	4770      	bx	lr

0800159c <_fini>:
 800159c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800159e:	bf00      	nop
 80015a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015a2:	bc08      	pop	{r3}
 80015a4:	469e      	mov	lr, r3
 80015a6:	4770      	bx	lr

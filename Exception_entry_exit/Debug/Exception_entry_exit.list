
Exception_entry_exit.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c68  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d8  08000e10  08000e10  00010e10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000ee8  08000ee8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000ee8  08000ee8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ee8  08000ee8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ee8  08000ee8  00010ee8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000eec  08000eec  00010eec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000ef0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08000f54  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000f54  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023b8  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000621  00000000  00000000  00022446  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  00022a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f0  00000000  00000000  00022b90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002be4  00000000  00000000  00022c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001343  00000000  00000000  00025864  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000096bd  00000000  00000000  00026ba7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030264  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a38  00000000  00000000  000302b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000064 	.word	0x20000064
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000df8 	.word	0x08000df8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000068 	.word	0x20000068
 80001e4:	08000df8 	.word	0x08000df8

080001e8 <generate_interrupt>:
#include<stdio.h>
#include<stdint.h>

/* This function executes in THREAD MODE of the processor */
void generate_interrupt()
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	uint32_t *pSTIR  = (uint32_t*)0xE000EF00;
 80001ee:	4b09      	ldr	r3, [pc, #36]	; (8000214 <generate_interrupt+0x2c>)
 80001f0:	607b      	str	r3, [r7, #4]
	uint32_t *pISER0 = (uint32_t*)0xE000E100;
 80001f2:	4b09      	ldr	r3, [pc, #36]	; (8000218 <generate_interrupt+0x30>)
 80001f4:	603b      	str	r3, [r7, #0]

	//enable IRQ3 interrupt
	*pISER0 |= ( 1 << 3);
 80001f6:	683b      	ldr	r3, [r7, #0]
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f043 0208 	orr.w	r2, r3, #8
 80001fe:	683b      	ldr	r3, [r7, #0]
 8000200:	601a      	str	r2, [r3, #0]

	//generate an interrupt from software for IRQ3
	*pSTIR = (3 & 0x1FF);
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	2203      	movs	r2, #3
 8000206:	601a      	str	r2, [r3, #0]

}
 8000208:	bf00      	nop
 800020a:	370c      	adds	r7, #12
 800020c:	46bd      	mov	sp, r7
 800020e:	bc80      	pop	{r7}
 8000210:	4770      	bx	lr
 8000212:	bf00      	nop
 8000214:	e000ef00 	.word	0xe000ef00
 8000218:	e000e100 	.word	0xe000e100

0800021c <main>:

}*/

/* This function executes in THREAD MODE+ PRIV ACCESS LEVEL of the processor */
int main(void)
{
 800021c:	b580      	push	{r7, lr}
 800021e:	b082      	sub	sp, #8
 8000220:	af00      	add	r7, sp, #0
	int control_reg=0x2;
 8000222:	2302      	movs	r3, #2
 8000224:	607b      	str	r3, [r7, #4]
	uint32_t psp_value=0x20008000;
 8000226:	4b08      	ldr	r3, [pc, #32]	; (8000248 <main+0x2c>)
 8000228:	603b      	str	r3, [r7, #0]

	__asm volatile("msr PSP,%0"::"r"(psp_value));
 800022a:	683b      	ldr	r3, [r7, #0]
 800022c:	f383 8809 	msr	PSP, r3
	__asm volatile("msr CONTROL,%0"::"r"(control_reg));
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	f383 8814 	msr	CONTROL, r3

	printf("In thread mode : before interrupt\n");
 8000236:	4805      	ldr	r0, [pc, #20]	; (800024c <main+0x30>)
 8000238:	f000 f988 	bl	800054c <puts>

	//change_access_level_unpriv();

	generate_interrupt();
 800023c:	f7ff ffd4 	bl	80001e8 <generate_interrupt>

	printf("In thread mode : after interrupt\n");
 8000240:	4803      	ldr	r0, [pc, #12]	; (8000250 <main+0x34>)
 8000242:	f000 f983 	bl	800054c <puts>

	for(;;);
 8000246:	e7fe      	b.n	8000246 <main+0x2a>
 8000248:	20008000 	.word	0x20008000
 800024c:	08000e10 	.word	0x08000e10
 8000250:	08000e34 	.word	0x08000e34

08000254 <RTC_WKUP_IRQHandler>:
}

/* This function(ISR) executes in HANDLER MODE of the processor */
void RTC_WKUP_IRQHandler(void)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0
	printf("In handler mode : ISR\n");
 8000258:	4802      	ldr	r0, [pc, #8]	; (8000264 <RTC_WKUP_IRQHandler+0x10>)
 800025a:	f000 f977 	bl	800054c <puts>
}
 800025e:	bf00      	nop
 8000260:	bd80      	pop	{r7, pc}
 8000262:	bf00      	nop
 8000264:	08000e58 	.word	0x08000e58

08000268 <HardFault_Handler>:

void HardFault_Handler(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	printf("Hard fault detected\n");
 800026c:	4801      	ldr	r0, [pc, #4]	; (8000274 <HardFault_Handler+0xc>)
 800026e:	f000 f96d 	bl	800054c <puts>
	while(1);
 8000272:	e7fe      	b.n	8000272 <HardFault_Handler+0xa>
 8000274:	08000e70 	.word	0x08000e70

08000278 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000278:	b580      	push	{r7, lr}
 800027a:	b086      	sub	sp, #24
 800027c:	af00      	add	r7, sp, #0
 800027e:	60f8      	str	r0, [r7, #12]
 8000280:	60b9      	str	r1, [r7, #8]
 8000282:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000284:	2300      	movs	r3, #0
 8000286:	617b      	str	r3, [r7, #20]
 8000288:	e00a      	b.n	80002a0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800028a:	f3af 8000 	nop.w
 800028e:	4601      	mov	r1, r0
 8000290:	68bb      	ldr	r3, [r7, #8]
 8000292:	1c5a      	adds	r2, r3, #1
 8000294:	60ba      	str	r2, [r7, #8]
 8000296:	b2ca      	uxtb	r2, r1
 8000298:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800029a:	697b      	ldr	r3, [r7, #20]
 800029c:	3301      	adds	r3, #1
 800029e:	617b      	str	r3, [r7, #20]
 80002a0:	697a      	ldr	r2, [r7, #20]
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	429a      	cmp	r2, r3
 80002a6:	dbf0      	blt.n	800028a <_read+0x12>
	}

return len;
 80002a8:	687b      	ldr	r3, [r7, #4]
}
 80002aa:	4618      	mov	r0, r3
 80002ac:	3718      	adds	r7, #24
 80002ae:	46bd      	mov	sp, r7
 80002b0:	bd80      	pop	{r7, pc}

080002b2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002b2:	b580      	push	{r7, lr}
 80002b4:	b086      	sub	sp, #24
 80002b6:	af00      	add	r7, sp, #0
 80002b8:	60f8      	str	r0, [r7, #12]
 80002ba:	60b9      	str	r1, [r7, #8]
 80002bc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002be:	2300      	movs	r3, #0
 80002c0:	617b      	str	r3, [r7, #20]
 80002c2:	e009      	b.n	80002d8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80002c4:	68bb      	ldr	r3, [r7, #8]
 80002c6:	1c5a      	adds	r2, r3, #1
 80002c8:	60ba      	str	r2, [r7, #8]
 80002ca:	781b      	ldrb	r3, [r3, #0]
 80002cc:	4618      	mov	r0, r3
 80002ce:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d2:	697b      	ldr	r3, [r7, #20]
 80002d4:	3301      	adds	r3, #1
 80002d6:	617b      	str	r3, [r7, #20]
 80002d8:	697a      	ldr	r2, [r7, #20]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	429a      	cmp	r2, r3
 80002de:	dbf1      	blt.n	80002c4 <_write+0x12>
	}
	return len;
 80002e0:	687b      	ldr	r3, [r7, #4]
}
 80002e2:	4618      	mov	r0, r3
 80002e4:	3718      	adds	r7, #24
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bd80      	pop	{r7, pc}

080002ea <_close>:

int _close(int file)
{
 80002ea:	b480      	push	{r7}
 80002ec:	b083      	sub	sp, #12
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	6078      	str	r0, [r7, #4]
	return -1;
 80002f2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002f6:	4618      	mov	r0, r3
 80002f8:	370c      	adds	r7, #12
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr

08000300 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000300:	b480      	push	{r7}
 8000302:	b083      	sub	sp, #12
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
 8000308:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800030a:	683b      	ldr	r3, [r7, #0]
 800030c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000310:	605a      	str	r2, [r3, #4]
	return 0;
 8000312:	2300      	movs	r3, #0
}
 8000314:	4618      	mov	r0, r3
 8000316:	370c      	adds	r7, #12
 8000318:	46bd      	mov	sp, r7
 800031a:	bc80      	pop	{r7}
 800031c:	4770      	bx	lr

0800031e <_isatty>:

int _isatty(int file)
{
 800031e:	b480      	push	{r7}
 8000320:	b083      	sub	sp, #12
 8000322:	af00      	add	r7, sp, #0
 8000324:	6078      	str	r0, [r7, #4]
	return 1;
 8000326:	2301      	movs	r3, #1
}
 8000328:	4618      	mov	r0, r3
 800032a:	370c      	adds	r7, #12
 800032c:	46bd      	mov	sp, r7
 800032e:	bc80      	pop	{r7}
 8000330:	4770      	bx	lr

08000332 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000332:	b480      	push	{r7}
 8000334:	b085      	sub	sp, #20
 8000336:	af00      	add	r7, sp, #0
 8000338:	60f8      	str	r0, [r7, #12]
 800033a:	60b9      	str	r1, [r7, #8]
 800033c:	607a      	str	r2, [r7, #4]
	return 0;
 800033e:	2300      	movs	r3, #0
}
 8000340:	4618      	mov	r0, r3
 8000342:	3714      	adds	r7, #20
 8000344:	46bd      	mov	sp, r7
 8000346:	bc80      	pop	{r7}
 8000348:	4770      	bx	lr
	...

0800034c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b086      	sub	sp, #24
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000354:	4a14      	ldr	r2, [pc, #80]	; (80003a8 <_sbrk+0x5c>)
 8000356:	4b15      	ldr	r3, [pc, #84]	; (80003ac <_sbrk+0x60>)
 8000358:	1ad3      	subs	r3, r2, r3
 800035a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800035c:	697b      	ldr	r3, [r7, #20]
 800035e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000360:	4b13      	ldr	r3, [pc, #76]	; (80003b0 <_sbrk+0x64>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	2b00      	cmp	r3, #0
 8000366:	d102      	bne.n	800036e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000368:	4b11      	ldr	r3, [pc, #68]	; (80003b0 <_sbrk+0x64>)
 800036a:	4a12      	ldr	r2, [pc, #72]	; (80003b4 <_sbrk+0x68>)
 800036c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800036e:	4b10      	ldr	r3, [pc, #64]	; (80003b0 <_sbrk+0x64>)
 8000370:	681a      	ldr	r2, [r3, #0]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4413      	add	r3, r2
 8000376:	693a      	ldr	r2, [r7, #16]
 8000378:	429a      	cmp	r2, r3
 800037a:	d207      	bcs.n	800038c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800037c:	f000 f846 	bl	800040c <__errno>
 8000380:	4603      	mov	r3, r0
 8000382:	220c      	movs	r2, #12
 8000384:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000386:	f04f 33ff 	mov.w	r3, #4294967295
 800038a:	e009      	b.n	80003a0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800038c:	4b08      	ldr	r3, [pc, #32]	; (80003b0 <_sbrk+0x64>)
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000392:	4b07      	ldr	r3, [pc, #28]	; (80003b0 <_sbrk+0x64>)
 8000394:	681a      	ldr	r2, [r3, #0]
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4413      	add	r3, r2
 800039a:	4a05      	ldr	r2, [pc, #20]	; (80003b0 <_sbrk+0x64>)
 800039c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800039e:	68fb      	ldr	r3, [r7, #12]
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	3718      	adds	r7, #24
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bd80      	pop	{r7, pc}
 80003a8:	20020000 	.word	0x20020000
 80003ac:	00000400 	.word	0x00000400
 80003b0:	20000080 	.word	0x20000080
 80003b4:	200000a0 	.word	0x200000a0

080003b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003b8:	480d      	ldr	r0, [pc, #52]	; (80003f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ba:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003c0:	480c      	ldr	r0, [pc, #48]	; (80003f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80003c2:	490d      	ldr	r1, [pc, #52]	; (80003f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003c4:	4a0d      	ldr	r2, [pc, #52]	; (80003fc <LoopForever+0xe>)
  movs r3, #0
 80003c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003c8:	e002      	b.n	80003d0 <LoopCopyDataInit>

080003ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ce:	3304      	adds	r3, #4

080003d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003d4:	d3f9      	bcc.n	80003ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003d6:	4a0a      	ldr	r2, [pc, #40]	; (8000400 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003d8:	4c0a      	ldr	r4, [pc, #40]	; (8000404 <LoopForever+0x16>)
  movs r3, #0
 80003da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003dc:	e001      	b.n	80003e2 <LoopFillZerobss>

080003de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003e0:	3204      	adds	r2, #4

080003e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003e4:	d3fb      	bcc.n	80003de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003e6:	f000 f817 	bl	8000418 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ea:	f7ff ff17 	bl	800021c <main>

080003ee <LoopForever>:

LoopForever:
    b LoopForever
 80003ee:	e7fe      	b.n	80003ee <LoopForever>
  ldr   r0, =_estack
 80003f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003f8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003fc:	08000ef0 	.word	0x08000ef0
  ldr r2, =_sbss
 8000400:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000404:	2000009c 	.word	0x2000009c

08000408 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000408:	e7fe      	b.n	8000408 <ADC_IRQHandler>
	...

0800040c <__errno>:
 800040c:	4b01      	ldr	r3, [pc, #4]	; (8000414 <__errno+0x8>)
 800040e:	6818      	ldr	r0, [r3, #0]
 8000410:	4770      	bx	lr
 8000412:	bf00      	nop
 8000414:	20000000 	.word	0x20000000

08000418 <__libc_init_array>:
 8000418:	b570      	push	{r4, r5, r6, lr}
 800041a:	4d0d      	ldr	r5, [pc, #52]	; (8000450 <__libc_init_array+0x38>)
 800041c:	4c0d      	ldr	r4, [pc, #52]	; (8000454 <__libc_init_array+0x3c>)
 800041e:	1b64      	subs	r4, r4, r5
 8000420:	10a4      	asrs	r4, r4, #2
 8000422:	2600      	movs	r6, #0
 8000424:	42a6      	cmp	r6, r4
 8000426:	d109      	bne.n	800043c <__libc_init_array+0x24>
 8000428:	4d0b      	ldr	r5, [pc, #44]	; (8000458 <__libc_init_array+0x40>)
 800042a:	4c0c      	ldr	r4, [pc, #48]	; (800045c <__libc_init_array+0x44>)
 800042c:	f000 fce4 	bl	8000df8 <_init>
 8000430:	1b64      	subs	r4, r4, r5
 8000432:	10a4      	asrs	r4, r4, #2
 8000434:	2600      	movs	r6, #0
 8000436:	42a6      	cmp	r6, r4
 8000438:	d105      	bne.n	8000446 <__libc_init_array+0x2e>
 800043a:	bd70      	pop	{r4, r5, r6, pc}
 800043c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000440:	4798      	blx	r3
 8000442:	3601      	adds	r6, #1
 8000444:	e7ee      	b.n	8000424 <__libc_init_array+0xc>
 8000446:	f855 3b04 	ldr.w	r3, [r5], #4
 800044a:	4798      	blx	r3
 800044c:	3601      	adds	r6, #1
 800044e:	e7f2      	b.n	8000436 <__libc_init_array+0x1e>
 8000450:	08000ee8 	.word	0x08000ee8
 8000454:	08000ee8 	.word	0x08000ee8
 8000458:	08000ee8 	.word	0x08000ee8
 800045c:	08000eec 	.word	0x08000eec

08000460 <memset>:
 8000460:	4402      	add	r2, r0
 8000462:	4603      	mov	r3, r0
 8000464:	4293      	cmp	r3, r2
 8000466:	d100      	bne.n	800046a <memset+0xa>
 8000468:	4770      	bx	lr
 800046a:	f803 1b01 	strb.w	r1, [r3], #1
 800046e:	e7f9      	b.n	8000464 <memset+0x4>

08000470 <_puts_r>:
 8000470:	b570      	push	{r4, r5, r6, lr}
 8000472:	460e      	mov	r6, r1
 8000474:	4605      	mov	r5, r0
 8000476:	b118      	cbz	r0, 8000480 <_puts_r+0x10>
 8000478:	6983      	ldr	r3, [r0, #24]
 800047a:	b90b      	cbnz	r3, 8000480 <_puts_r+0x10>
 800047c:	f000 fa48 	bl	8000910 <__sinit>
 8000480:	69ab      	ldr	r3, [r5, #24]
 8000482:	68ac      	ldr	r4, [r5, #8]
 8000484:	b913      	cbnz	r3, 800048c <_puts_r+0x1c>
 8000486:	4628      	mov	r0, r5
 8000488:	f000 fa42 	bl	8000910 <__sinit>
 800048c:	4b2c      	ldr	r3, [pc, #176]	; (8000540 <_puts_r+0xd0>)
 800048e:	429c      	cmp	r4, r3
 8000490:	d120      	bne.n	80004d4 <_puts_r+0x64>
 8000492:	686c      	ldr	r4, [r5, #4]
 8000494:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000496:	07db      	lsls	r3, r3, #31
 8000498:	d405      	bmi.n	80004a6 <_puts_r+0x36>
 800049a:	89a3      	ldrh	r3, [r4, #12]
 800049c:	0598      	lsls	r0, r3, #22
 800049e:	d402      	bmi.n	80004a6 <_puts_r+0x36>
 80004a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004a2:	f000 fad3 	bl	8000a4c <__retarget_lock_acquire_recursive>
 80004a6:	89a3      	ldrh	r3, [r4, #12]
 80004a8:	0719      	lsls	r1, r3, #28
 80004aa:	d51d      	bpl.n	80004e8 <_puts_r+0x78>
 80004ac:	6923      	ldr	r3, [r4, #16]
 80004ae:	b1db      	cbz	r3, 80004e8 <_puts_r+0x78>
 80004b0:	3e01      	subs	r6, #1
 80004b2:	68a3      	ldr	r3, [r4, #8]
 80004b4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004b8:	3b01      	subs	r3, #1
 80004ba:	60a3      	str	r3, [r4, #8]
 80004bc:	bb39      	cbnz	r1, 800050e <_puts_r+0x9e>
 80004be:	2b00      	cmp	r3, #0
 80004c0:	da38      	bge.n	8000534 <_puts_r+0xc4>
 80004c2:	4622      	mov	r2, r4
 80004c4:	210a      	movs	r1, #10
 80004c6:	4628      	mov	r0, r5
 80004c8:	f000 f848 	bl	800055c <__swbuf_r>
 80004cc:	3001      	adds	r0, #1
 80004ce:	d011      	beq.n	80004f4 <_puts_r+0x84>
 80004d0:	250a      	movs	r5, #10
 80004d2:	e011      	b.n	80004f8 <_puts_r+0x88>
 80004d4:	4b1b      	ldr	r3, [pc, #108]	; (8000544 <_puts_r+0xd4>)
 80004d6:	429c      	cmp	r4, r3
 80004d8:	d101      	bne.n	80004de <_puts_r+0x6e>
 80004da:	68ac      	ldr	r4, [r5, #8]
 80004dc:	e7da      	b.n	8000494 <_puts_r+0x24>
 80004de:	4b1a      	ldr	r3, [pc, #104]	; (8000548 <_puts_r+0xd8>)
 80004e0:	429c      	cmp	r4, r3
 80004e2:	bf08      	it	eq
 80004e4:	68ec      	ldreq	r4, [r5, #12]
 80004e6:	e7d5      	b.n	8000494 <_puts_r+0x24>
 80004e8:	4621      	mov	r1, r4
 80004ea:	4628      	mov	r0, r5
 80004ec:	f000 f888 	bl	8000600 <__swsetup_r>
 80004f0:	2800      	cmp	r0, #0
 80004f2:	d0dd      	beq.n	80004b0 <_puts_r+0x40>
 80004f4:	f04f 35ff 	mov.w	r5, #4294967295
 80004f8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004fa:	07da      	lsls	r2, r3, #31
 80004fc:	d405      	bmi.n	800050a <_puts_r+0x9a>
 80004fe:	89a3      	ldrh	r3, [r4, #12]
 8000500:	059b      	lsls	r3, r3, #22
 8000502:	d402      	bmi.n	800050a <_puts_r+0x9a>
 8000504:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000506:	f000 faa2 	bl	8000a4e <__retarget_lock_release_recursive>
 800050a:	4628      	mov	r0, r5
 800050c:	bd70      	pop	{r4, r5, r6, pc}
 800050e:	2b00      	cmp	r3, #0
 8000510:	da04      	bge.n	800051c <_puts_r+0xac>
 8000512:	69a2      	ldr	r2, [r4, #24]
 8000514:	429a      	cmp	r2, r3
 8000516:	dc06      	bgt.n	8000526 <_puts_r+0xb6>
 8000518:	290a      	cmp	r1, #10
 800051a:	d004      	beq.n	8000526 <_puts_r+0xb6>
 800051c:	6823      	ldr	r3, [r4, #0]
 800051e:	1c5a      	adds	r2, r3, #1
 8000520:	6022      	str	r2, [r4, #0]
 8000522:	7019      	strb	r1, [r3, #0]
 8000524:	e7c5      	b.n	80004b2 <_puts_r+0x42>
 8000526:	4622      	mov	r2, r4
 8000528:	4628      	mov	r0, r5
 800052a:	f000 f817 	bl	800055c <__swbuf_r>
 800052e:	3001      	adds	r0, #1
 8000530:	d1bf      	bne.n	80004b2 <_puts_r+0x42>
 8000532:	e7df      	b.n	80004f4 <_puts_r+0x84>
 8000534:	6823      	ldr	r3, [r4, #0]
 8000536:	250a      	movs	r5, #10
 8000538:	1c5a      	adds	r2, r3, #1
 800053a:	6022      	str	r2, [r4, #0]
 800053c:	701d      	strb	r5, [r3, #0]
 800053e:	e7db      	b.n	80004f8 <_puts_r+0x88>
 8000540:	08000ea8 	.word	0x08000ea8
 8000544:	08000ec8 	.word	0x08000ec8
 8000548:	08000e88 	.word	0x08000e88

0800054c <puts>:
 800054c:	4b02      	ldr	r3, [pc, #8]	; (8000558 <puts+0xc>)
 800054e:	4601      	mov	r1, r0
 8000550:	6818      	ldr	r0, [r3, #0]
 8000552:	f7ff bf8d 	b.w	8000470 <_puts_r>
 8000556:	bf00      	nop
 8000558:	20000000 	.word	0x20000000

0800055c <__swbuf_r>:
 800055c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800055e:	460e      	mov	r6, r1
 8000560:	4614      	mov	r4, r2
 8000562:	4605      	mov	r5, r0
 8000564:	b118      	cbz	r0, 800056e <__swbuf_r+0x12>
 8000566:	6983      	ldr	r3, [r0, #24]
 8000568:	b90b      	cbnz	r3, 800056e <__swbuf_r+0x12>
 800056a:	f000 f9d1 	bl	8000910 <__sinit>
 800056e:	4b21      	ldr	r3, [pc, #132]	; (80005f4 <__swbuf_r+0x98>)
 8000570:	429c      	cmp	r4, r3
 8000572:	d12b      	bne.n	80005cc <__swbuf_r+0x70>
 8000574:	686c      	ldr	r4, [r5, #4]
 8000576:	69a3      	ldr	r3, [r4, #24]
 8000578:	60a3      	str	r3, [r4, #8]
 800057a:	89a3      	ldrh	r3, [r4, #12]
 800057c:	071a      	lsls	r2, r3, #28
 800057e:	d52f      	bpl.n	80005e0 <__swbuf_r+0x84>
 8000580:	6923      	ldr	r3, [r4, #16]
 8000582:	b36b      	cbz	r3, 80005e0 <__swbuf_r+0x84>
 8000584:	6923      	ldr	r3, [r4, #16]
 8000586:	6820      	ldr	r0, [r4, #0]
 8000588:	1ac0      	subs	r0, r0, r3
 800058a:	6963      	ldr	r3, [r4, #20]
 800058c:	b2f6      	uxtb	r6, r6
 800058e:	4283      	cmp	r3, r0
 8000590:	4637      	mov	r7, r6
 8000592:	dc04      	bgt.n	800059e <__swbuf_r+0x42>
 8000594:	4621      	mov	r1, r4
 8000596:	4628      	mov	r0, r5
 8000598:	f000 f926 	bl	80007e8 <_fflush_r>
 800059c:	bb30      	cbnz	r0, 80005ec <__swbuf_r+0x90>
 800059e:	68a3      	ldr	r3, [r4, #8]
 80005a0:	3b01      	subs	r3, #1
 80005a2:	60a3      	str	r3, [r4, #8]
 80005a4:	6823      	ldr	r3, [r4, #0]
 80005a6:	1c5a      	adds	r2, r3, #1
 80005a8:	6022      	str	r2, [r4, #0]
 80005aa:	701e      	strb	r6, [r3, #0]
 80005ac:	6963      	ldr	r3, [r4, #20]
 80005ae:	3001      	adds	r0, #1
 80005b0:	4283      	cmp	r3, r0
 80005b2:	d004      	beq.n	80005be <__swbuf_r+0x62>
 80005b4:	89a3      	ldrh	r3, [r4, #12]
 80005b6:	07db      	lsls	r3, r3, #31
 80005b8:	d506      	bpl.n	80005c8 <__swbuf_r+0x6c>
 80005ba:	2e0a      	cmp	r6, #10
 80005bc:	d104      	bne.n	80005c8 <__swbuf_r+0x6c>
 80005be:	4621      	mov	r1, r4
 80005c0:	4628      	mov	r0, r5
 80005c2:	f000 f911 	bl	80007e8 <_fflush_r>
 80005c6:	b988      	cbnz	r0, 80005ec <__swbuf_r+0x90>
 80005c8:	4638      	mov	r0, r7
 80005ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005cc:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <__swbuf_r+0x9c>)
 80005ce:	429c      	cmp	r4, r3
 80005d0:	d101      	bne.n	80005d6 <__swbuf_r+0x7a>
 80005d2:	68ac      	ldr	r4, [r5, #8]
 80005d4:	e7cf      	b.n	8000576 <__swbuf_r+0x1a>
 80005d6:	4b09      	ldr	r3, [pc, #36]	; (80005fc <__swbuf_r+0xa0>)
 80005d8:	429c      	cmp	r4, r3
 80005da:	bf08      	it	eq
 80005dc:	68ec      	ldreq	r4, [r5, #12]
 80005de:	e7ca      	b.n	8000576 <__swbuf_r+0x1a>
 80005e0:	4621      	mov	r1, r4
 80005e2:	4628      	mov	r0, r5
 80005e4:	f000 f80c 	bl	8000600 <__swsetup_r>
 80005e8:	2800      	cmp	r0, #0
 80005ea:	d0cb      	beq.n	8000584 <__swbuf_r+0x28>
 80005ec:	f04f 37ff 	mov.w	r7, #4294967295
 80005f0:	e7ea      	b.n	80005c8 <__swbuf_r+0x6c>
 80005f2:	bf00      	nop
 80005f4:	08000ea8 	.word	0x08000ea8
 80005f8:	08000ec8 	.word	0x08000ec8
 80005fc:	08000e88 	.word	0x08000e88

08000600 <__swsetup_r>:
 8000600:	4b32      	ldr	r3, [pc, #200]	; (80006cc <__swsetup_r+0xcc>)
 8000602:	b570      	push	{r4, r5, r6, lr}
 8000604:	681d      	ldr	r5, [r3, #0]
 8000606:	4606      	mov	r6, r0
 8000608:	460c      	mov	r4, r1
 800060a:	b125      	cbz	r5, 8000616 <__swsetup_r+0x16>
 800060c:	69ab      	ldr	r3, [r5, #24]
 800060e:	b913      	cbnz	r3, 8000616 <__swsetup_r+0x16>
 8000610:	4628      	mov	r0, r5
 8000612:	f000 f97d 	bl	8000910 <__sinit>
 8000616:	4b2e      	ldr	r3, [pc, #184]	; (80006d0 <__swsetup_r+0xd0>)
 8000618:	429c      	cmp	r4, r3
 800061a:	d10f      	bne.n	800063c <__swsetup_r+0x3c>
 800061c:	686c      	ldr	r4, [r5, #4]
 800061e:	89a3      	ldrh	r3, [r4, #12]
 8000620:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000624:	0719      	lsls	r1, r3, #28
 8000626:	d42c      	bmi.n	8000682 <__swsetup_r+0x82>
 8000628:	06dd      	lsls	r5, r3, #27
 800062a:	d411      	bmi.n	8000650 <__swsetup_r+0x50>
 800062c:	2309      	movs	r3, #9
 800062e:	6033      	str	r3, [r6, #0]
 8000630:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000634:	81a3      	strh	r3, [r4, #12]
 8000636:	f04f 30ff 	mov.w	r0, #4294967295
 800063a:	e03e      	b.n	80006ba <__swsetup_r+0xba>
 800063c:	4b25      	ldr	r3, [pc, #148]	; (80006d4 <__swsetup_r+0xd4>)
 800063e:	429c      	cmp	r4, r3
 8000640:	d101      	bne.n	8000646 <__swsetup_r+0x46>
 8000642:	68ac      	ldr	r4, [r5, #8]
 8000644:	e7eb      	b.n	800061e <__swsetup_r+0x1e>
 8000646:	4b24      	ldr	r3, [pc, #144]	; (80006d8 <__swsetup_r+0xd8>)
 8000648:	429c      	cmp	r4, r3
 800064a:	bf08      	it	eq
 800064c:	68ec      	ldreq	r4, [r5, #12]
 800064e:	e7e6      	b.n	800061e <__swsetup_r+0x1e>
 8000650:	0758      	lsls	r0, r3, #29
 8000652:	d512      	bpl.n	800067a <__swsetup_r+0x7a>
 8000654:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000656:	b141      	cbz	r1, 800066a <__swsetup_r+0x6a>
 8000658:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800065c:	4299      	cmp	r1, r3
 800065e:	d002      	beq.n	8000666 <__swsetup_r+0x66>
 8000660:	4630      	mov	r0, r6
 8000662:	f000 fa59 	bl	8000b18 <_free_r>
 8000666:	2300      	movs	r3, #0
 8000668:	6363      	str	r3, [r4, #52]	; 0x34
 800066a:	89a3      	ldrh	r3, [r4, #12]
 800066c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000670:	81a3      	strh	r3, [r4, #12]
 8000672:	2300      	movs	r3, #0
 8000674:	6063      	str	r3, [r4, #4]
 8000676:	6923      	ldr	r3, [r4, #16]
 8000678:	6023      	str	r3, [r4, #0]
 800067a:	89a3      	ldrh	r3, [r4, #12]
 800067c:	f043 0308 	orr.w	r3, r3, #8
 8000680:	81a3      	strh	r3, [r4, #12]
 8000682:	6923      	ldr	r3, [r4, #16]
 8000684:	b94b      	cbnz	r3, 800069a <__swsetup_r+0x9a>
 8000686:	89a3      	ldrh	r3, [r4, #12]
 8000688:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800068c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000690:	d003      	beq.n	800069a <__swsetup_r+0x9a>
 8000692:	4621      	mov	r1, r4
 8000694:	4630      	mov	r0, r6
 8000696:	f000 f9ff 	bl	8000a98 <__smakebuf_r>
 800069a:	89a0      	ldrh	r0, [r4, #12]
 800069c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006a0:	f010 0301 	ands.w	r3, r0, #1
 80006a4:	d00a      	beq.n	80006bc <__swsetup_r+0xbc>
 80006a6:	2300      	movs	r3, #0
 80006a8:	60a3      	str	r3, [r4, #8]
 80006aa:	6963      	ldr	r3, [r4, #20]
 80006ac:	425b      	negs	r3, r3
 80006ae:	61a3      	str	r3, [r4, #24]
 80006b0:	6923      	ldr	r3, [r4, #16]
 80006b2:	b943      	cbnz	r3, 80006c6 <__swsetup_r+0xc6>
 80006b4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80006b8:	d1ba      	bne.n	8000630 <__swsetup_r+0x30>
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	0781      	lsls	r1, r0, #30
 80006be:	bf58      	it	pl
 80006c0:	6963      	ldrpl	r3, [r4, #20]
 80006c2:	60a3      	str	r3, [r4, #8]
 80006c4:	e7f4      	b.n	80006b0 <__swsetup_r+0xb0>
 80006c6:	2000      	movs	r0, #0
 80006c8:	e7f7      	b.n	80006ba <__swsetup_r+0xba>
 80006ca:	bf00      	nop
 80006cc:	20000000 	.word	0x20000000
 80006d0:	08000ea8 	.word	0x08000ea8
 80006d4:	08000ec8 	.word	0x08000ec8
 80006d8:	08000e88 	.word	0x08000e88

080006dc <__sflush_r>:
 80006dc:	898a      	ldrh	r2, [r1, #12]
 80006de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006e2:	4605      	mov	r5, r0
 80006e4:	0710      	lsls	r0, r2, #28
 80006e6:	460c      	mov	r4, r1
 80006e8:	d458      	bmi.n	800079c <__sflush_r+0xc0>
 80006ea:	684b      	ldr	r3, [r1, #4]
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	dc05      	bgt.n	80006fc <__sflush_r+0x20>
 80006f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	dc02      	bgt.n	80006fc <__sflush_r+0x20>
 80006f6:	2000      	movs	r0, #0
 80006f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006fe:	2e00      	cmp	r6, #0
 8000700:	d0f9      	beq.n	80006f6 <__sflush_r+0x1a>
 8000702:	2300      	movs	r3, #0
 8000704:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000708:	682f      	ldr	r7, [r5, #0]
 800070a:	602b      	str	r3, [r5, #0]
 800070c:	d032      	beq.n	8000774 <__sflush_r+0x98>
 800070e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000710:	89a3      	ldrh	r3, [r4, #12]
 8000712:	075a      	lsls	r2, r3, #29
 8000714:	d505      	bpl.n	8000722 <__sflush_r+0x46>
 8000716:	6863      	ldr	r3, [r4, #4]
 8000718:	1ac0      	subs	r0, r0, r3
 800071a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800071c:	b10b      	cbz	r3, 8000722 <__sflush_r+0x46>
 800071e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000720:	1ac0      	subs	r0, r0, r3
 8000722:	2300      	movs	r3, #0
 8000724:	4602      	mov	r2, r0
 8000726:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000728:	6a21      	ldr	r1, [r4, #32]
 800072a:	4628      	mov	r0, r5
 800072c:	47b0      	blx	r6
 800072e:	1c43      	adds	r3, r0, #1
 8000730:	89a3      	ldrh	r3, [r4, #12]
 8000732:	d106      	bne.n	8000742 <__sflush_r+0x66>
 8000734:	6829      	ldr	r1, [r5, #0]
 8000736:	291d      	cmp	r1, #29
 8000738:	d82c      	bhi.n	8000794 <__sflush_r+0xb8>
 800073a:	4a2a      	ldr	r2, [pc, #168]	; (80007e4 <__sflush_r+0x108>)
 800073c:	40ca      	lsrs	r2, r1
 800073e:	07d6      	lsls	r6, r2, #31
 8000740:	d528      	bpl.n	8000794 <__sflush_r+0xb8>
 8000742:	2200      	movs	r2, #0
 8000744:	6062      	str	r2, [r4, #4]
 8000746:	04d9      	lsls	r1, r3, #19
 8000748:	6922      	ldr	r2, [r4, #16]
 800074a:	6022      	str	r2, [r4, #0]
 800074c:	d504      	bpl.n	8000758 <__sflush_r+0x7c>
 800074e:	1c42      	adds	r2, r0, #1
 8000750:	d101      	bne.n	8000756 <__sflush_r+0x7a>
 8000752:	682b      	ldr	r3, [r5, #0]
 8000754:	b903      	cbnz	r3, 8000758 <__sflush_r+0x7c>
 8000756:	6560      	str	r0, [r4, #84]	; 0x54
 8000758:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800075a:	602f      	str	r7, [r5, #0]
 800075c:	2900      	cmp	r1, #0
 800075e:	d0ca      	beq.n	80006f6 <__sflush_r+0x1a>
 8000760:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000764:	4299      	cmp	r1, r3
 8000766:	d002      	beq.n	800076e <__sflush_r+0x92>
 8000768:	4628      	mov	r0, r5
 800076a:	f000 f9d5 	bl	8000b18 <_free_r>
 800076e:	2000      	movs	r0, #0
 8000770:	6360      	str	r0, [r4, #52]	; 0x34
 8000772:	e7c1      	b.n	80006f8 <__sflush_r+0x1c>
 8000774:	6a21      	ldr	r1, [r4, #32]
 8000776:	2301      	movs	r3, #1
 8000778:	4628      	mov	r0, r5
 800077a:	47b0      	blx	r6
 800077c:	1c41      	adds	r1, r0, #1
 800077e:	d1c7      	bne.n	8000710 <__sflush_r+0x34>
 8000780:	682b      	ldr	r3, [r5, #0]
 8000782:	2b00      	cmp	r3, #0
 8000784:	d0c4      	beq.n	8000710 <__sflush_r+0x34>
 8000786:	2b1d      	cmp	r3, #29
 8000788:	d001      	beq.n	800078e <__sflush_r+0xb2>
 800078a:	2b16      	cmp	r3, #22
 800078c:	d101      	bne.n	8000792 <__sflush_r+0xb6>
 800078e:	602f      	str	r7, [r5, #0]
 8000790:	e7b1      	b.n	80006f6 <__sflush_r+0x1a>
 8000792:	89a3      	ldrh	r3, [r4, #12]
 8000794:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000798:	81a3      	strh	r3, [r4, #12]
 800079a:	e7ad      	b.n	80006f8 <__sflush_r+0x1c>
 800079c:	690f      	ldr	r7, [r1, #16]
 800079e:	2f00      	cmp	r7, #0
 80007a0:	d0a9      	beq.n	80006f6 <__sflush_r+0x1a>
 80007a2:	0793      	lsls	r3, r2, #30
 80007a4:	680e      	ldr	r6, [r1, #0]
 80007a6:	bf08      	it	eq
 80007a8:	694b      	ldreq	r3, [r1, #20]
 80007aa:	600f      	str	r7, [r1, #0]
 80007ac:	bf18      	it	ne
 80007ae:	2300      	movne	r3, #0
 80007b0:	eba6 0807 	sub.w	r8, r6, r7
 80007b4:	608b      	str	r3, [r1, #8]
 80007b6:	f1b8 0f00 	cmp.w	r8, #0
 80007ba:	dd9c      	ble.n	80006f6 <__sflush_r+0x1a>
 80007bc:	6a21      	ldr	r1, [r4, #32]
 80007be:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80007c0:	4643      	mov	r3, r8
 80007c2:	463a      	mov	r2, r7
 80007c4:	4628      	mov	r0, r5
 80007c6:	47b0      	blx	r6
 80007c8:	2800      	cmp	r0, #0
 80007ca:	dc06      	bgt.n	80007da <__sflush_r+0xfe>
 80007cc:	89a3      	ldrh	r3, [r4, #12]
 80007ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007d2:	81a3      	strh	r3, [r4, #12]
 80007d4:	f04f 30ff 	mov.w	r0, #4294967295
 80007d8:	e78e      	b.n	80006f8 <__sflush_r+0x1c>
 80007da:	4407      	add	r7, r0
 80007dc:	eba8 0800 	sub.w	r8, r8, r0
 80007e0:	e7e9      	b.n	80007b6 <__sflush_r+0xda>
 80007e2:	bf00      	nop
 80007e4:	20400001 	.word	0x20400001

080007e8 <_fflush_r>:
 80007e8:	b538      	push	{r3, r4, r5, lr}
 80007ea:	690b      	ldr	r3, [r1, #16]
 80007ec:	4605      	mov	r5, r0
 80007ee:	460c      	mov	r4, r1
 80007f0:	b913      	cbnz	r3, 80007f8 <_fflush_r+0x10>
 80007f2:	2500      	movs	r5, #0
 80007f4:	4628      	mov	r0, r5
 80007f6:	bd38      	pop	{r3, r4, r5, pc}
 80007f8:	b118      	cbz	r0, 8000802 <_fflush_r+0x1a>
 80007fa:	6983      	ldr	r3, [r0, #24]
 80007fc:	b90b      	cbnz	r3, 8000802 <_fflush_r+0x1a>
 80007fe:	f000 f887 	bl	8000910 <__sinit>
 8000802:	4b14      	ldr	r3, [pc, #80]	; (8000854 <_fflush_r+0x6c>)
 8000804:	429c      	cmp	r4, r3
 8000806:	d11b      	bne.n	8000840 <_fflush_r+0x58>
 8000808:	686c      	ldr	r4, [r5, #4]
 800080a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800080e:	2b00      	cmp	r3, #0
 8000810:	d0ef      	beq.n	80007f2 <_fflush_r+0xa>
 8000812:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000814:	07d0      	lsls	r0, r2, #31
 8000816:	d404      	bmi.n	8000822 <_fflush_r+0x3a>
 8000818:	0599      	lsls	r1, r3, #22
 800081a:	d402      	bmi.n	8000822 <_fflush_r+0x3a>
 800081c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800081e:	f000 f915 	bl	8000a4c <__retarget_lock_acquire_recursive>
 8000822:	4628      	mov	r0, r5
 8000824:	4621      	mov	r1, r4
 8000826:	f7ff ff59 	bl	80006dc <__sflush_r>
 800082a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800082c:	07da      	lsls	r2, r3, #31
 800082e:	4605      	mov	r5, r0
 8000830:	d4e0      	bmi.n	80007f4 <_fflush_r+0xc>
 8000832:	89a3      	ldrh	r3, [r4, #12]
 8000834:	059b      	lsls	r3, r3, #22
 8000836:	d4dd      	bmi.n	80007f4 <_fflush_r+0xc>
 8000838:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800083a:	f000 f908 	bl	8000a4e <__retarget_lock_release_recursive>
 800083e:	e7d9      	b.n	80007f4 <_fflush_r+0xc>
 8000840:	4b05      	ldr	r3, [pc, #20]	; (8000858 <_fflush_r+0x70>)
 8000842:	429c      	cmp	r4, r3
 8000844:	d101      	bne.n	800084a <_fflush_r+0x62>
 8000846:	68ac      	ldr	r4, [r5, #8]
 8000848:	e7df      	b.n	800080a <_fflush_r+0x22>
 800084a:	4b04      	ldr	r3, [pc, #16]	; (800085c <_fflush_r+0x74>)
 800084c:	429c      	cmp	r4, r3
 800084e:	bf08      	it	eq
 8000850:	68ec      	ldreq	r4, [r5, #12]
 8000852:	e7da      	b.n	800080a <_fflush_r+0x22>
 8000854:	08000ea8 	.word	0x08000ea8
 8000858:	08000ec8 	.word	0x08000ec8
 800085c:	08000e88 	.word	0x08000e88

08000860 <std>:
 8000860:	2300      	movs	r3, #0
 8000862:	b510      	push	{r4, lr}
 8000864:	4604      	mov	r4, r0
 8000866:	e9c0 3300 	strd	r3, r3, [r0]
 800086a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800086e:	6083      	str	r3, [r0, #8]
 8000870:	8181      	strh	r1, [r0, #12]
 8000872:	6643      	str	r3, [r0, #100]	; 0x64
 8000874:	81c2      	strh	r2, [r0, #14]
 8000876:	6183      	str	r3, [r0, #24]
 8000878:	4619      	mov	r1, r3
 800087a:	2208      	movs	r2, #8
 800087c:	305c      	adds	r0, #92	; 0x5c
 800087e:	f7ff fdef 	bl	8000460 <memset>
 8000882:	4b05      	ldr	r3, [pc, #20]	; (8000898 <std+0x38>)
 8000884:	6263      	str	r3, [r4, #36]	; 0x24
 8000886:	4b05      	ldr	r3, [pc, #20]	; (800089c <std+0x3c>)
 8000888:	62a3      	str	r3, [r4, #40]	; 0x28
 800088a:	4b05      	ldr	r3, [pc, #20]	; (80008a0 <std+0x40>)
 800088c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800088e:	4b05      	ldr	r3, [pc, #20]	; (80008a4 <std+0x44>)
 8000890:	6224      	str	r4, [r4, #32]
 8000892:	6323      	str	r3, [r4, #48]	; 0x30
 8000894:	bd10      	pop	{r4, pc}
 8000896:	bf00      	nop
 8000898:	08000c89 	.word	0x08000c89
 800089c:	08000cab 	.word	0x08000cab
 80008a0:	08000ce3 	.word	0x08000ce3
 80008a4:	08000d07 	.word	0x08000d07

080008a8 <_cleanup_r>:
 80008a8:	4901      	ldr	r1, [pc, #4]	; (80008b0 <_cleanup_r+0x8>)
 80008aa:	f000 b8af 	b.w	8000a0c <_fwalk_reent>
 80008ae:	bf00      	nop
 80008b0:	080007e9 	.word	0x080007e9

080008b4 <__sfmoreglue>:
 80008b4:	b570      	push	{r4, r5, r6, lr}
 80008b6:	1e4a      	subs	r2, r1, #1
 80008b8:	2568      	movs	r5, #104	; 0x68
 80008ba:	4355      	muls	r5, r2
 80008bc:	460e      	mov	r6, r1
 80008be:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008c2:	f000 f977 	bl	8000bb4 <_malloc_r>
 80008c6:	4604      	mov	r4, r0
 80008c8:	b140      	cbz	r0, 80008dc <__sfmoreglue+0x28>
 80008ca:	2100      	movs	r1, #0
 80008cc:	e9c0 1600 	strd	r1, r6, [r0]
 80008d0:	300c      	adds	r0, #12
 80008d2:	60a0      	str	r0, [r4, #8]
 80008d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008d8:	f7ff fdc2 	bl	8000460 <memset>
 80008dc:	4620      	mov	r0, r4
 80008de:	bd70      	pop	{r4, r5, r6, pc}

080008e0 <__sfp_lock_acquire>:
 80008e0:	4801      	ldr	r0, [pc, #4]	; (80008e8 <__sfp_lock_acquire+0x8>)
 80008e2:	f000 b8b3 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 80008e6:	bf00      	nop
 80008e8:	20000094 	.word	0x20000094

080008ec <__sfp_lock_release>:
 80008ec:	4801      	ldr	r0, [pc, #4]	; (80008f4 <__sfp_lock_release+0x8>)
 80008ee:	f000 b8ae 	b.w	8000a4e <__retarget_lock_release_recursive>
 80008f2:	bf00      	nop
 80008f4:	20000094 	.word	0x20000094

080008f8 <__sinit_lock_acquire>:
 80008f8:	4801      	ldr	r0, [pc, #4]	; (8000900 <__sinit_lock_acquire+0x8>)
 80008fa:	f000 b8a7 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 80008fe:	bf00      	nop
 8000900:	2000008f 	.word	0x2000008f

08000904 <__sinit_lock_release>:
 8000904:	4801      	ldr	r0, [pc, #4]	; (800090c <__sinit_lock_release+0x8>)
 8000906:	f000 b8a2 	b.w	8000a4e <__retarget_lock_release_recursive>
 800090a:	bf00      	nop
 800090c:	2000008f 	.word	0x2000008f

08000910 <__sinit>:
 8000910:	b510      	push	{r4, lr}
 8000912:	4604      	mov	r4, r0
 8000914:	f7ff fff0 	bl	80008f8 <__sinit_lock_acquire>
 8000918:	69a3      	ldr	r3, [r4, #24]
 800091a:	b11b      	cbz	r3, 8000924 <__sinit+0x14>
 800091c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000920:	f7ff bff0 	b.w	8000904 <__sinit_lock_release>
 8000924:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000928:	6523      	str	r3, [r4, #80]	; 0x50
 800092a:	4b13      	ldr	r3, [pc, #76]	; (8000978 <__sinit+0x68>)
 800092c:	4a13      	ldr	r2, [pc, #76]	; (800097c <__sinit+0x6c>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	62a2      	str	r2, [r4, #40]	; 0x28
 8000932:	42a3      	cmp	r3, r4
 8000934:	bf04      	itt	eq
 8000936:	2301      	moveq	r3, #1
 8000938:	61a3      	streq	r3, [r4, #24]
 800093a:	4620      	mov	r0, r4
 800093c:	f000 f820 	bl	8000980 <__sfp>
 8000940:	6060      	str	r0, [r4, #4]
 8000942:	4620      	mov	r0, r4
 8000944:	f000 f81c 	bl	8000980 <__sfp>
 8000948:	60a0      	str	r0, [r4, #8]
 800094a:	4620      	mov	r0, r4
 800094c:	f000 f818 	bl	8000980 <__sfp>
 8000950:	2200      	movs	r2, #0
 8000952:	60e0      	str	r0, [r4, #12]
 8000954:	2104      	movs	r1, #4
 8000956:	6860      	ldr	r0, [r4, #4]
 8000958:	f7ff ff82 	bl	8000860 <std>
 800095c:	68a0      	ldr	r0, [r4, #8]
 800095e:	2201      	movs	r2, #1
 8000960:	2109      	movs	r1, #9
 8000962:	f7ff ff7d 	bl	8000860 <std>
 8000966:	68e0      	ldr	r0, [r4, #12]
 8000968:	2202      	movs	r2, #2
 800096a:	2112      	movs	r1, #18
 800096c:	f7ff ff78 	bl	8000860 <std>
 8000970:	2301      	movs	r3, #1
 8000972:	61a3      	str	r3, [r4, #24]
 8000974:	e7d2      	b.n	800091c <__sinit+0xc>
 8000976:	bf00      	nop
 8000978:	08000e84 	.word	0x08000e84
 800097c:	080008a9 	.word	0x080008a9

08000980 <__sfp>:
 8000980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000982:	4607      	mov	r7, r0
 8000984:	f7ff ffac 	bl	80008e0 <__sfp_lock_acquire>
 8000988:	4b1e      	ldr	r3, [pc, #120]	; (8000a04 <__sfp+0x84>)
 800098a:	681e      	ldr	r6, [r3, #0]
 800098c:	69b3      	ldr	r3, [r6, #24]
 800098e:	b913      	cbnz	r3, 8000996 <__sfp+0x16>
 8000990:	4630      	mov	r0, r6
 8000992:	f7ff ffbd 	bl	8000910 <__sinit>
 8000996:	3648      	adds	r6, #72	; 0x48
 8000998:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800099c:	3b01      	subs	r3, #1
 800099e:	d503      	bpl.n	80009a8 <__sfp+0x28>
 80009a0:	6833      	ldr	r3, [r6, #0]
 80009a2:	b30b      	cbz	r3, 80009e8 <__sfp+0x68>
 80009a4:	6836      	ldr	r6, [r6, #0]
 80009a6:	e7f7      	b.n	8000998 <__sfp+0x18>
 80009a8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009ac:	b9d5      	cbnz	r5, 80009e4 <__sfp+0x64>
 80009ae:	4b16      	ldr	r3, [pc, #88]	; (8000a08 <__sfp+0x88>)
 80009b0:	60e3      	str	r3, [r4, #12]
 80009b2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009b6:	6665      	str	r5, [r4, #100]	; 0x64
 80009b8:	f000 f847 	bl	8000a4a <__retarget_lock_init_recursive>
 80009bc:	f7ff ff96 	bl	80008ec <__sfp_lock_release>
 80009c0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009c4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009c8:	6025      	str	r5, [r4, #0]
 80009ca:	61a5      	str	r5, [r4, #24]
 80009cc:	2208      	movs	r2, #8
 80009ce:	4629      	mov	r1, r5
 80009d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009d4:	f7ff fd44 	bl	8000460 <memset>
 80009d8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009e0:	4620      	mov	r0, r4
 80009e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009e4:	3468      	adds	r4, #104	; 0x68
 80009e6:	e7d9      	b.n	800099c <__sfp+0x1c>
 80009e8:	2104      	movs	r1, #4
 80009ea:	4638      	mov	r0, r7
 80009ec:	f7ff ff62 	bl	80008b4 <__sfmoreglue>
 80009f0:	4604      	mov	r4, r0
 80009f2:	6030      	str	r0, [r6, #0]
 80009f4:	2800      	cmp	r0, #0
 80009f6:	d1d5      	bne.n	80009a4 <__sfp+0x24>
 80009f8:	f7ff ff78 	bl	80008ec <__sfp_lock_release>
 80009fc:	230c      	movs	r3, #12
 80009fe:	603b      	str	r3, [r7, #0]
 8000a00:	e7ee      	b.n	80009e0 <__sfp+0x60>
 8000a02:	bf00      	nop
 8000a04:	08000e84 	.word	0x08000e84
 8000a08:	ffff0001 	.word	0xffff0001

08000a0c <_fwalk_reent>:
 8000a0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a10:	4606      	mov	r6, r0
 8000a12:	4688      	mov	r8, r1
 8000a14:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a18:	2700      	movs	r7, #0
 8000a1a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a1e:	f1b9 0901 	subs.w	r9, r9, #1
 8000a22:	d505      	bpl.n	8000a30 <_fwalk_reent+0x24>
 8000a24:	6824      	ldr	r4, [r4, #0]
 8000a26:	2c00      	cmp	r4, #0
 8000a28:	d1f7      	bne.n	8000a1a <_fwalk_reent+0xe>
 8000a2a:	4638      	mov	r0, r7
 8000a2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a30:	89ab      	ldrh	r3, [r5, #12]
 8000a32:	2b01      	cmp	r3, #1
 8000a34:	d907      	bls.n	8000a46 <_fwalk_reent+0x3a>
 8000a36:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a3a:	3301      	adds	r3, #1
 8000a3c:	d003      	beq.n	8000a46 <_fwalk_reent+0x3a>
 8000a3e:	4629      	mov	r1, r5
 8000a40:	4630      	mov	r0, r6
 8000a42:	47c0      	blx	r8
 8000a44:	4307      	orrs	r7, r0
 8000a46:	3568      	adds	r5, #104	; 0x68
 8000a48:	e7e9      	b.n	8000a1e <_fwalk_reent+0x12>

08000a4a <__retarget_lock_init_recursive>:
 8000a4a:	4770      	bx	lr

08000a4c <__retarget_lock_acquire_recursive>:
 8000a4c:	4770      	bx	lr

08000a4e <__retarget_lock_release_recursive>:
 8000a4e:	4770      	bx	lr

08000a50 <__swhatbuf_r>:
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460e      	mov	r6, r1
 8000a54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a58:	2900      	cmp	r1, #0
 8000a5a:	b096      	sub	sp, #88	; 0x58
 8000a5c:	4614      	mov	r4, r2
 8000a5e:	461d      	mov	r5, r3
 8000a60:	da07      	bge.n	8000a72 <__swhatbuf_r+0x22>
 8000a62:	2300      	movs	r3, #0
 8000a64:	602b      	str	r3, [r5, #0]
 8000a66:	89b3      	ldrh	r3, [r6, #12]
 8000a68:	061a      	lsls	r2, r3, #24
 8000a6a:	d410      	bmi.n	8000a8e <__swhatbuf_r+0x3e>
 8000a6c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a70:	e00e      	b.n	8000a90 <__swhatbuf_r+0x40>
 8000a72:	466a      	mov	r2, sp
 8000a74:	f000 f96e 	bl	8000d54 <_fstat_r>
 8000a78:	2800      	cmp	r0, #0
 8000a7a:	dbf2      	blt.n	8000a62 <__swhatbuf_r+0x12>
 8000a7c:	9a01      	ldr	r2, [sp, #4]
 8000a7e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a82:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a86:	425a      	negs	r2, r3
 8000a88:	415a      	adcs	r2, r3
 8000a8a:	602a      	str	r2, [r5, #0]
 8000a8c:	e7ee      	b.n	8000a6c <__swhatbuf_r+0x1c>
 8000a8e:	2340      	movs	r3, #64	; 0x40
 8000a90:	2000      	movs	r0, #0
 8000a92:	6023      	str	r3, [r4, #0]
 8000a94:	b016      	add	sp, #88	; 0x58
 8000a96:	bd70      	pop	{r4, r5, r6, pc}

08000a98 <__smakebuf_r>:
 8000a98:	898b      	ldrh	r3, [r1, #12]
 8000a9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a9c:	079d      	lsls	r5, r3, #30
 8000a9e:	4606      	mov	r6, r0
 8000aa0:	460c      	mov	r4, r1
 8000aa2:	d507      	bpl.n	8000ab4 <__smakebuf_r+0x1c>
 8000aa4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000aa8:	6023      	str	r3, [r4, #0]
 8000aaa:	6123      	str	r3, [r4, #16]
 8000aac:	2301      	movs	r3, #1
 8000aae:	6163      	str	r3, [r4, #20]
 8000ab0:	b002      	add	sp, #8
 8000ab2:	bd70      	pop	{r4, r5, r6, pc}
 8000ab4:	ab01      	add	r3, sp, #4
 8000ab6:	466a      	mov	r2, sp
 8000ab8:	f7ff ffca 	bl	8000a50 <__swhatbuf_r>
 8000abc:	9900      	ldr	r1, [sp, #0]
 8000abe:	4605      	mov	r5, r0
 8000ac0:	4630      	mov	r0, r6
 8000ac2:	f000 f877 	bl	8000bb4 <_malloc_r>
 8000ac6:	b948      	cbnz	r0, 8000adc <__smakebuf_r+0x44>
 8000ac8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000acc:	059a      	lsls	r2, r3, #22
 8000ace:	d4ef      	bmi.n	8000ab0 <__smakebuf_r+0x18>
 8000ad0:	f023 0303 	bic.w	r3, r3, #3
 8000ad4:	f043 0302 	orr.w	r3, r3, #2
 8000ad8:	81a3      	strh	r3, [r4, #12]
 8000ada:	e7e3      	b.n	8000aa4 <__smakebuf_r+0xc>
 8000adc:	4b0d      	ldr	r3, [pc, #52]	; (8000b14 <__smakebuf_r+0x7c>)
 8000ade:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ae0:	89a3      	ldrh	r3, [r4, #12]
 8000ae2:	6020      	str	r0, [r4, #0]
 8000ae4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ae8:	81a3      	strh	r3, [r4, #12]
 8000aea:	9b00      	ldr	r3, [sp, #0]
 8000aec:	6163      	str	r3, [r4, #20]
 8000aee:	9b01      	ldr	r3, [sp, #4]
 8000af0:	6120      	str	r0, [r4, #16]
 8000af2:	b15b      	cbz	r3, 8000b0c <__smakebuf_r+0x74>
 8000af4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000af8:	4630      	mov	r0, r6
 8000afa:	f000 f93d 	bl	8000d78 <_isatty_r>
 8000afe:	b128      	cbz	r0, 8000b0c <__smakebuf_r+0x74>
 8000b00:	89a3      	ldrh	r3, [r4, #12]
 8000b02:	f023 0303 	bic.w	r3, r3, #3
 8000b06:	f043 0301 	orr.w	r3, r3, #1
 8000b0a:	81a3      	strh	r3, [r4, #12]
 8000b0c:	89a0      	ldrh	r0, [r4, #12]
 8000b0e:	4305      	orrs	r5, r0
 8000b10:	81a5      	strh	r5, [r4, #12]
 8000b12:	e7cd      	b.n	8000ab0 <__smakebuf_r+0x18>
 8000b14:	080008a9 	.word	0x080008a9

08000b18 <_free_r>:
 8000b18:	b538      	push	{r3, r4, r5, lr}
 8000b1a:	4605      	mov	r5, r0
 8000b1c:	2900      	cmp	r1, #0
 8000b1e:	d045      	beq.n	8000bac <_free_r+0x94>
 8000b20:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b24:	1f0c      	subs	r4, r1, #4
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	bfb8      	it	lt
 8000b2a:	18e4      	addlt	r4, r4, r3
 8000b2c:	f000 f946 	bl	8000dbc <__malloc_lock>
 8000b30:	4a1f      	ldr	r2, [pc, #124]	; (8000bb0 <_free_r+0x98>)
 8000b32:	6813      	ldr	r3, [r2, #0]
 8000b34:	4610      	mov	r0, r2
 8000b36:	b933      	cbnz	r3, 8000b46 <_free_r+0x2e>
 8000b38:	6063      	str	r3, [r4, #4]
 8000b3a:	6014      	str	r4, [r2, #0]
 8000b3c:	4628      	mov	r0, r5
 8000b3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b42:	f000 b941 	b.w	8000dc8 <__malloc_unlock>
 8000b46:	42a3      	cmp	r3, r4
 8000b48:	d90b      	bls.n	8000b62 <_free_r+0x4a>
 8000b4a:	6821      	ldr	r1, [r4, #0]
 8000b4c:	1862      	adds	r2, r4, r1
 8000b4e:	4293      	cmp	r3, r2
 8000b50:	bf04      	itt	eq
 8000b52:	681a      	ldreq	r2, [r3, #0]
 8000b54:	685b      	ldreq	r3, [r3, #4]
 8000b56:	6063      	str	r3, [r4, #4]
 8000b58:	bf04      	itt	eq
 8000b5a:	1852      	addeq	r2, r2, r1
 8000b5c:	6022      	streq	r2, [r4, #0]
 8000b5e:	6004      	str	r4, [r0, #0]
 8000b60:	e7ec      	b.n	8000b3c <_free_r+0x24>
 8000b62:	461a      	mov	r2, r3
 8000b64:	685b      	ldr	r3, [r3, #4]
 8000b66:	b10b      	cbz	r3, 8000b6c <_free_r+0x54>
 8000b68:	42a3      	cmp	r3, r4
 8000b6a:	d9fa      	bls.n	8000b62 <_free_r+0x4a>
 8000b6c:	6811      	ldr	r1, [r2, #0]
 8000b6e:	1850      	adds	r0, r2, r1
 8000b70:	42a0      	cmp	r0, r4
 8000b72:	d10b      	bne.n	8000b8c <_free_r+0x74>
 8000b74:	6820      	ldr	r0, [r4, #0]
 8000b76:	4401      	add	r1, r0
 8000b78:	1850      	adds	r0, r2, r1
 8000b7a:	4283      	cmp	r3, r0
 8000b7c:	6011      	str	r1, [r2, #0]
 8000b7e:	d1dd      	bne.n	8000b3c <_free_r+0x24>
 8000b80:	6818      	ldr	r0, [r3, #0]
 8000b82:	685b      	ldr	r3, [r3, #4]
 8000b84:	6053      	str	r3, [r2, #4]
 8000b86:	4401      	add	r1, r0
 8000b88:	6011      	str	r1, [r2, #0]
 8000b8a:	e7d7      	b.n	8000b3c <_free_r+0x24>
 8000b8c:	d902      	bls.n	8000b94 <_free_r+0x7c>
 8000b8e:	230c      	movs	r3, #12
 8000b90:	602b      	str	r3, [r5, #0]
 8000b92:	e7d3      	b.n	8000b3c <_free_r+0x24>
 8000b94:	6820      	ldr	r0, [r4, #0]
 8000b96:	1821      	adds	r1, r4, r0
 8000b98:	428b      	cmp	r3, r1
 8000b9a:	bf04      	itt	eq
 8000b9c:	6819      	ldreq	r1, [r3, #0]
 8000b9e:	685b      	ldreq	r3, [r3, #4]
 8000ba0:	6063      	str	r3, [r4, #4]
 8000ba2:	bf04      	itt	eq
 8000ba4:	1809      	addeq	r1, r1, r0
 8000ba6:	6021      	streq	r1, [r4, #0]
 8000ba8:	6054      	str	r4, [r2, #4]
 8000baa:	e7c7      	b.n	8000b3c <_free_r+0x24>
 8000bac:	bd38      	pop	{r3, r4, r5, pc}
 8000bae:	bf00      	nop
 8000bb0:	20000084 	.word	0x20000084

08000bb4 <_malloc_r>:
 8000bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bb6:	1ccd      	adds	r5, r1, #3
 8000bb8:	f025 0503 	bic.w	r5, r5, #3
 8000bbc:	3508      	adds	r5, #8
 8000bbe:	2d0c      	cmp	r5, #12
 8000bc0:	bf38      	it	cc
 8000bc2:	250c      	movcc	r5, #12
 8000bc4:	2d00      	cmp	r5, #0
 8000bc6:	4606      	mov	r6, r0
 8000bc8:	db01      	blt.n	8000bce <_malloc_r+0x1a>
 8000bca:	42a9      	cmp	r1, r5
 8000bcc:	d903      	bls.n	8000bd6 <_malloc_r+0x22>
 8000bce:	230c      	movs	r3, #12
 8000bd0:	6033      	str	r3, [r6, #0]
 8000bd2:	2000      	movs	r0, #0
 8000bd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000bd6:	f000 f8f1 	bl	8000dbc <__malloc_lock>
 8000bda:	4921      	ldr	r1, [pc, #132]	; (8000c60 <_malloc_r+0xac>)
 8000bdc:	680a      	ldr	r2, [r1, #0]
 8000bde:	4614      	mov	r4, r2
 8000be0:	b99c      	cbnz	r4, 8000c0a <_malloc_r+0x56>
 8000be2:	4f20      	ldr	r7, [pc, #128]	; (8000c64 <_malloc_r+0xb0>)
 8000be4:	683b      	ldr	r3, [r7, #0]
 8000be6:	b923      	cbnz	r3, 8000bf2 <_malloc_r+0x3e>
 8000be8:	4621      	mov	r1, r4
 8000bea:	4630      	mov	r0, r6
 8000bec:	f000 f83c 	bl	8000c68 <_sbrk_r>
 8000bf0:	6038      	str	r0, [r7, #0]
 8000bf2:	4629      	mov	r1, r5
 8000bf4:	4630      	mov	r0, r6
 8000bf6:	f000 f837 	bl	8000c68 <_sbrk_r>
 8000bfa:	1c43      	adds	r3, r0, #1
 8000bfc:	d123      	bne.n	8000c46 <_malloc_r+0x92>
 8000bfe:	230c      	movs	r3, #12
 8000c00:	6033      	str	r3, [r6, #0]
 8000c02:	4630      	mov	r0, r6
 8000c04:	f000 f8e0 	bl	8000dc8 <__malloc_unlock>
 8000c08:	e7e3      	b.n	8000bd2 <_malloc_r+0x1e>
 8000c0a:	6823      	ldr	r3, [r4, #0]
 8000c0c:	1b5b      	subs	r3, r3, r5
 8000c0e:	d417      	bmi.n	8000c40 <_malloc_r+0x8c>
 8000c10:	2b0b      	cmp	r3, #11
 8000c12:	d903      	bls.n	8000c1c <_malloc_r+0x68>
 8000c14:	6023      	str	r3, [r4, #0]
 8000c16:	441c      	add	r4, r3
 8000c18:	6025      	str	r5, [r4, #0]
 8000c1a:	e004      	b.n	8000c26 <_malloc_r+0x72>
 8000c1c:	6863      	ldr	r3, [r4, #4]
 8000c1e:	42a2      	cmp	r2, r4
 8000c20:	bf0c      	ite	eq
 8000c22:	600b      	streq	r3, [r1, #0]
 8000c24:	6053      	strne	r3, [r2, #4]
 8000c26:	4630      	mov	r0, r6
 8000c28:	f000 f8ce 	bl	8000dc8 <__malloc_unlock>
 8000c2c:	f104 000b 	add.w	r0, r4, #11
 8000c30:	1d23      	adds	r3, r4, #4
 8000c32:	f020 0007 	bic.w	r0, r0, #7
 8000c36:	1ac2      	subs	r2, r0, r3
 8000c38:	d0cc      	beq.n	8000bd4 <_malloc_r+0x20>
 8000c3a:	1a1b      	subs	r3, r3, r0
 8000c3c:	50a3      	str	r3, [r4, r2]
 8000c3e:	e7c9      	b.n	8000bd4 <_malloc_r+0x20>
 8000c40:	4622      	mov	r2, r4
 8000c42:	6864      	ldr	r4, [r4, #4]
 8000c44:	e7cc      	b.n	8000be0 <_malloc_r+0x2c>
 8000c46:	1cc4      	adds	r4, r0, #3
 8000c48:	f024 0403 	bic.w	r4, r4, #3
 8000c4c:	42a0      	cmp	r0, r4
 8000c4e:	d0e3      	beq.n	8000c18 <_malloc_r+0x64>
 8000c50:	1a21      	subs	r1, r4, r0
 8000c52:	4630      	mov	r0, r6
 8000c54:	f000 f808 	bl	8000c68 <_sbrk_r>
 8000c58:	3001      	adds	r0, #1
 8000c5a:	d1dd      	bne.n	8000c18 <_malloc_r+0x64>
 8000c5c:	e7cf      	b.n	8000bfe <_malloc_r+0x4a>
 8000c5e:	bf00      	nop
 8000c60:	20000084 	.word	0x20000084
 8000c64:	20000088 	.word	0x20000088

08000c68 <_sbrk_r>:
 8000c68:	b538      	push	{r3, r4, r5, lr}
 8000c6a:	4d06      	ldr	r5, [pc, #24]	; (8000c84 <_sbrk_r+0x1c>)
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4604      	mov	r4, r0
 8000c70:	4608      	mov	r0, r1
 8000c72:	602b      	str	r3, [r5, #0]
 8000c74:	f7ff fb6a 	bl	800034c <_sbrk>
 8000c78:	1c43      	adds	r3, r0, #1
 8000c7a:	d102      	bne.n	8000c82 <_sbrk_r+0x1a>
 8000c7c:	682b      	ldr	r3, [r5, #0]
 8000c7e:	b103      	cbz	r3, 8000c82 <_sbrk_r+0x1a>
 8000c80:	6023      	str	r3, [r4, #0]
 8000c82:	bd38      	pop	{r3, r4, r5, pc}
 8000c84:	20000098 	.word	0x20000098

08000c88 <__sread>:
 8000c88:	b510      	push	{r4, lr}
 8000c8a:	460c      	mov	r4, r1
 8000c8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c90:	f000 f8a0 	bl	8000dd4 <_read_r>
 8000c94:	2800      	cmp	r0, #0
 8000c96:	bfab      	itete	ge
 8000c98:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c9a:	89a3      	ldrhlt	r3, [r4, #12]
 8000c9c:	181b      	addge	r3, r3, r0
 8000c9e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ca2:	bfac      	ite	ge
 8000ca4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ca6:	81a3      	strhlt	r3, [r4, #12]
 8000ca8:	bd10      	pop	{r4, pc}

08000caa <__swrite>:
 8000caa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cae:	461f      	mov	r7, r3
 8000cb0:	898b      	ldrh	r3, [r1, #12]
 8000cb2:	05db      	lsls	r3, r3, #23
 8000cb4:	4605      	mov	r5, r0
 8000cb6:	460c      	mov	r4, r1
 8000cb8:	4616      	mov	r6, r2
 8000cba:	d505      	bpl.n	8000cc8 <__swrite+0x1e>
 8000cbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc0:	2302      	movs	r3, #2
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f000 f868 	bl	8000d98 <_lseek_r>
 8000cc8:	89a3      	ldrh	r3, [r4, #12]
 8000cca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cd2:	81a3      	strh	r3, [r4, #12]
 8000cd4:	4632      	mov	r2, r6
 8000cd6:	463b      	mov	r3, r7
 8000cd8:	4628      	mov	r0, r5
 8000cda:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cde:	f000 b817 	b.w	8000d10 <_write_r>

08000ce2 <__sseek>:
 8000ce2:	b510      	push	{r4, lr}
 8000ce4:	460c      	mov	r4, r1
 8000ce6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cea:	f000 f855 	bl	8000d98 <_lseek_r>
 8000cee:	1c43      	adds	r3, r0, #1
 8000cf0:	89a3      	ldrh	r3, [r4, #12]
 8000cf2:	bf15      	itete	ne
 8000cf4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cf6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cfa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cfe:	81a3      	strheq	r3, [r4, #12]
 8000d00:	bf18      	it	ne
 8000d02:	81a3      	strhne	r3, [r4, #12]
 8000d04:	bd10      	pop	{r4, pc}

08000d06 <__sclose>:
 8000d06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d0a:	f000 b813 	b.w	8000d34 <_close_r>
	...

08000d10 <_write_r>:
 8000d10:	b538      	push	{r3, r4, r5, lr}
 8000d12:	4d07      	ldr	r5, [pc, #28]	; (8000d30 <_write_r+0x20>)
 8000d14:	4604      	mov	r4, r0
 8000d16:	4608      	mov	r0, r1
 8000d18:	4611      	mov	r1, r2
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	602a      	str	r2, [r5, #0]
 8000d1e:	461a      	mov	r2, r3
 8000d20:	f7ff fac7 	bl	80002b2 <_write>
 8000d24:	1c43      	adds	r3, r0, #1
 8000d26:	d102      	bne.n	8000d2e <_write_r+0x1e>
 8000d28:	682b      	ldr	r3, [r5, #0]
 8000d2a:	b103      	cbz	r3, 8000d2e <_write_r+0x1e>
 8000d2c:	6023      	str	r3, [r4, #0]
 8000d2e:	bd38      	pop	{r3, r4, r5, pc}
 8000d30:	20000098 	.word	0x20000098

08000d34 <_close_r>:
 8000d34:	b538      	push	{r3, r4, r5, lr}
 8000d36:	4d06      	ldr	r5, [pc, #24]	; (8000d50 <_close_r+0x1c>)
 8000d38:	2300      	movs	r3, #0
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	4608      	mov	r0, r1
 8000d3e:	602b      	str	r3, [r5, #0]
 8000d40:	f7ff fad3 	bl	80002ea <_close>
 8000d44:	1c43      	adds	r3, r0, #1
 8000d46:	d102      	bne.n	8000d4e <_close_r+0x1a>
 8000d48:	682b      	ldr	r3, [r5, #0]
 8000d4a:	b103      	cbz	r3, 8000d4e <_close_r+0x1a>
 8000d4c:	6023      	str	r3, [r4, #0]
 8000d4e:	bd38      	pop	{r3, r4, r5, pc}
 8000d50:	20000098 	.word	0x20000098

08000d54 <_fstat_r>:
 8000d54:	b538      	push	{r3, r4, r5, lr}
 8000d56:	4d07      	ldr	r5, [pc, #28]	; (8000d74 <_fstat_r+0x20>)
 8000d58:	2300      	movs	r3, #0
 8000d5a:	4604      	mov	r4, r0
 8000d5c:	4608      	mov	r0, r1
 8000d5e:	4611      	mov	r1, r2
 8000d60:	602b      	str	r3, [r5, #0]
 8000d62:	f7ff facd 	bl	8000300 <_fstat>
 8000d66:	1c43      	adds	r3, r0, #1
 8000d68:	d102      	bne.n	8000d70 <_fstat_r+0x1c>
 8000d6a:	682b      	ldr	r3, [r5, #0]
 8000d6c:	b103      	cbz	r3, 8000d70 <_fstat_r+0x1c>
 8000d6e:	6023      	str	r3, [r4, #0]
 8000d70:	bd38      	pop	{r3, r4, r5, pc}
 8000d72:	bf00      	nop
 8000d74:	20000098 	.word	0x20000098

08000d78 <_isatty_r>:
 8000d78:	b538      	push	{r3, r4, r5, lr}
 8000d7a:	4d06      	ldr	r5, [pc, #24]	; (8000d94 <_isatty_r+0x1c>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	4604      	mov	r4, r0
 8000d80:	4608      	mov	r0, r1
 8000d82:	602b      	str	r3, [r5, #0]
 8000d84:	f7ff facb 	bl	800031e <_isatty>
 8000d88:	1c43      	adds	r3, r0, #1
 8000d8a:	d102      	bne.n	8000d92 <_isatty_r+0x1a>
 8000d8c:	682b      	ldr	r3, [r5, #0]
 8000d8e:	b103      	cbz	r3, 8000d92 <_isatty_r+0x1a>
 8000d90:	6023      	str	r3, [r4, #0]
 8000d92:	bd38      	pop	{r3, r4, r5, pc}
 8000d94:	20000098 	.word	0x20000098

08000d98 <_lseek_r>:
 8000d98:	b538      	push	{r3, r4, r5, lr}
 8000d9a:	4d07      	ldr	r5, [pc, #28]	; (8000db8 <_lseek_r+0x20>)
 8000d9c:	4604      	mov	r4, r0
 8000d9e:	4608      	mov	r0, r1
 8000da0:	4611      	mov	r1, r2
 8000da2:	2200      	movs	r2, #0
 8000da4:	602a      	str	r2, [r5, #0]
 8000da6:	461a      	mov	r2, r3
 8000da8:	f7ff fac3 	bl	8000332 <_lseek>
 8000dac:	1c43      	adds	r3, r0, #1
 8000dae:	d102      	bne.n	8000db6 <_lseek_r+0x1e>
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	b103      	cbz	r3, 8000db6 <_lseek_r+0x1e>
 8000db4:	6023      	str	r3, [r4, #0]
 8000db6:	bd38      	pop	{r3, r4, r5, pc}
 8000db8:	20000098 	.word	0x20000098

08000dbc <__malloc_lock>:
 8000dbc:	4801      	ldr	r0, [pc, #4]	; (8000dc4 <__malloc_lock+0x8>)
 8000dbe:	f7ff be45 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 8000dc2:	bf00      	nop
 8000dc4:	20000090 	.word	0x20000090

08000dc8 <__malloc_unlock>:
 8000dc8:	4801      	ldr	r0, [pc, #4]	; (8000dd0 <__malloc_unlock+0x8>)
 8000dca:	f7ff be40 	b.w	8000a4e <__retarget_lock_release_recursive>
 8000dce:	bf00      	nop
 8000dd0:	20000090 	.word	0x20000090

08000dd4 <_read_r>:
 8000dd4:	b538      	push	{r3, r4, r5, lr}
 8000dd6:	4d07      	ldr	r5, [pc, #28]	; (8000df4 <_read_r+0x20>)
 8000dd8:	4604      	mov	r4, r0
 8000dda:	4608      	mov	r0, r1
 8000ddc:	4611      	mov	r1, r2
 8000dde:	2200      	movs	r2, #0
 8000de0:	602a      	str	r2, [r5, #0]
 8000de2:	461a      	mov	r2, r3
 8000de4:	f7ff fa48 	bl	8000278 <_read>
 8000de8:	1c43      	adds	r3, r0, #1
 8000dea:	d102      	bne.n	8000df2 <_read_r+0x1e>
 8000dec:	682b      	ldr	r3, [r5, #0]
 8000dee:	b103      	cbz	r3, 8000df2 <_read_r+0x1e>
 8000df0:	6023      	str	r3, [r4, #0]
 8000df2:	bd38      	pop	{r3, r4, r5, pc}
 8000df4:	20000098 	.word	0x20000098

08000df8 <_init>:
 8000df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dfa:	bf00      	nop
 8000dfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dfe:	bc08      	pop	{r3}
 8000e00:	469e      	mov	lr, r3
 8000e02:	4770      	bx	lr

08000e04 <_fini>:
 8000e04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e06:	bf00      	nop
 8000e08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e0a:	bc08      	pop	{r3}
 8000e0c:	469e      	mov	lr, r3
 8000e0e:	4770      	bx	lr
